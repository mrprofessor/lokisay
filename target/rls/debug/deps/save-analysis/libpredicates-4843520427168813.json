{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5","program":"/Users/rudr7942/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","predicates","--edition=2018","/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"difference\"","--cfg","feature=\"float-cmp\"","--cfg","feature=\"normalize-line-endings\"","--cfg","feature=\"regex\"","-C","metadata=4843520427168813","-C","extra-filename=-4843520427168813","--out-dir","/Users/rudr7942/dev/lokisay/target/rls/debug/deps","-L","dependency=/Users/rudr7942/dev/lokisay/target/rls/debug/deps","--extern","difference=/Users/rudr7942/dev/lokisay/target/rls/debug/deps/libdifference-01a0835cef9c0958.rmeta","--extern","float_cmp=/Users/rudr7942/dev/lokisay/target/rls/debug/deps/libfloat_cmp-8d191b18b0ca72d2.rmeta","--extern","normalize_line_endings=/Users/rudr7942/dev/lokisay/target/rls/debug/deps/libnormalize_line_endings-a433896d8eadd048.rmeta","--extern","predicates_core=/Users/rudr7942/dev/lokisay/target/rls/debug/deps/libpredicates_core-18024f75599b138c.rmeta","--extern","regex=/Users/rudr7942/dev/lokisay/target/rls/debug/deps/libregex-1807e1a28349e28d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/rudr7942/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/rudr7942/dev/lokisay/target/rls/debug/deps/libpredicates-4843520427168813.rmeta"},"prelude":{"crate_id":{"name":"predicates","disambiguator":[11655078271713579273,7053769540853280174]},"crate_root":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src","external_crates":[{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14920118443260649468,6799873627142870961]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1844954537018218648,16570159001010767920]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[16437105423049283034,13312228696766436902]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13569262031960136914,926278369663005569]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9065077540001280346,5972367981040449865]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[7013975980446320719,4024400865057542973]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17617311883804814182,13753176117248034829]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10627003420787933698,8372112224406474813]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[17821317327494065584,13808099233817094080]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[15423047965231407403,416074916754657818]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[13820017895795527141,8230108407990713412]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[1402496660407379612,10608574961827181449]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17535701131653633025,17299066394660958529]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[4797083768912782472,17265154906292509739]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","num":15,"id":{"name":"predicates_core","disambiguator":[10018150221872993009,5488504381580214736]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","num":16,"id":{"name":"float_cmp","disambiguator":[16324936976419125866,14555156072685315059]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","num":17,"id":{"name":"num_traits","disambiguator":[14395078783392587509,2456815762278978200]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","num":18,"id":{"name":"difference","disambiguator":[619209972766731371,4286619228127808615]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/normalize.rs","num":19,"id":{"name":"normalize_line_endings","disambiguator":[17034084929696162554,16955097360423605321]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","num":20,"id":{"name":"regex","disambiguator":[14736903624500233414,18381949488813265711]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","num":21,"id":{"name":"aho_corasick","disambiguator":[1019482888219508820,14404119342585017943]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","num":22,"id":{"name":"memchr","disambiguator":[13441648339959567409,13136444195947382762]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","num":23,"id":{"name":"regex_syntax","disambiguator":[8117849262121064164,15561597621077247444]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","num":24,"id":{"name":"thread_local","disambiguator":[12154682358640940181,12505779733285917947]}},{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","num":25,"id":{"name":"lazy_static","disambiguator":[14839071252340993957,4173087639422160489]}}],"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":363,"byte_end":10020,"line_start":9,"line_end":227,"column_start":1,"column_end":11}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":352},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10480,"byte_end":10499,"line_start":11,"line_end":11,"column_start":25,"column_end":44},"alias_span":null,"name":"PredicateBooleanExt","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10523,"byte_end":10538,"line_start":12,"line_end":12,"column_start":23,"column_end":38},"alias_span":null,"name":"PredicateBoxExt","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":218},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10561,"byte_end":10577,"line_start":13,"line_end":13,"column_start":22,"column_end":38},"alias_span":null,"name":"PredicateNameExt","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":465},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10600,"byte_end":10623,"line_start":14,"line_end":14,"column_start":22,"column_end":45},"alias_span":null,"name":"PredicateFileContentExt","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":613},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10645,"byte_end":10660,"line_start":15,"line_end":15,"column_start":21,"column_end":36},"alias_span":null,"name":"PredicateStrExt","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":15,"index":5},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10677,"byte_end":10686,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"alias_span":null,"name":"Predicate","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":99},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10798,"byte_end":10804,"line_start":21,"line_end":21,"column_start":31,"column_end":37},"alias_span":null,"name":"always","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10806,"byte_end":10811,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"alias_span":null,"name":"never","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":124},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10843,"byte_end":10851,"line_start":22,"line_end":22,"column_start":30,"column_end":38},"alias_span":null,"name":"function","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":195},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10879,"byte_end":10886,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"alias_span":null,"name":"in_hash","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10888,"byte_end":10895,"line_start":23,"line_end":23,"column_start":36,"column_end":43},"alias_span":null,"name":"in_iter","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10923,"byte_end":10925,"line_start":24,"line_end":24,"column_start":26,"column_end":28},"alias_span":null,"name":"eq","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":273},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10927,"byte_end":10929,"line_start":24,"line_end":24,"column_start":30,"column_end":32},"alias_span":null,"name":"ge","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":275},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10931,"byte_end":10933,"line_start":24,"line_end":24,"column_start":34,"column_end":36},"alias_span":null,"name":"gt","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":271},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10935,"byte_end":10937,"line_start":24,"line_end":24,"column_start":38,"column_end":40},"alias_span":null,"name":"le","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10939,"byte_end":10941,"line_start":24,"line_end":24,"column_start":42,"column_end":44},"alias_span":null,"name":"lt","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":249},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10943,"byte_end":10945,"line_start":24,"line_end":24,"column_start":46,"column_end":48},"alias_span":null,"name":"ne","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":0,"index":533},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11106,"byte_end":11114,"line_start":30,"line_end":30,"column_start":29,"column_end":37},"alias_span":null,"name":"is_empty","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":0,"index":570},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11145,"byte_end":11153,"line_start":31,"line_end":31,"column_start":30,"column_end":38},"alias_span":null,"name":"contains","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":0,"index":550},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11155,"byte_end":11164,"line_start":31,"line_end":31,"column_start":40,"column_end":49},"alias_span":null,"name":"ends_with","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":0,"index":541},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11166,"byte_end":11177,"line_start":31,"line_end":31,"column_start":51,"column_end":62},"alias_span":null,"name":"starts_with","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":0,"index":641},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11249,"byte_end":11253,"line_start":34,"line_end":34,"column_start":30,"column_end":34},"alias_span":null,"name":"diff","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11255,"byte_end":11262,"line_start":34,"line_end":34,"column_start":36,"column_end":43},"alias_span":null,"name":"similar","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":0,"index":693},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11328,"byte_end":11336,"line_start":37,"line_end":37,"column_start":29,"column_end":37},"alias_span":null,"name":"is_match","value":"","parent":{"krate":0,"index":25}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11503,"byte_end":11510,"line_start":44,"line_end":44,"column_start":30,"column_end":37},"alias_span":null,"name":"eq_file","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11542,"byte_end":11548,"line_start":45,"line_end":45,"column_start":31,"column_end":37},"alias_span":null,"name":"exists","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":401},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11550,"byte_end":11557,"line_start":45,"line_end":45,"column_start":39,"column_end":46},"alias_span":null,"name":"missing","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11590,"byte_end":11596,"line_start":46,"line_end":46,"column_start":31,"column_end":37},"alias_span":null,"name":"is_dir","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11598,"byte_end":11605,"line_start":46,"line_end":46,"column_start":39,"column_end":46},"alias_span":null,"name":"is_file","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11607,"byte_end":11617,"line_start":46,"line_end":46,"column_start":48,"column_end":58},"alias_span":null,"name":"is_symlink","value":"","parent":{"krate":0,"index":35}},{"kind":"Use","ref_id":{"krate":0,"index":382},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11825,"byte_end":11833,"line_start":54,"line_end":54,"column_start":31,"column_end":39},"alias_span":null,"name":"is_close","value":"","parent":{"krate":0,"index":44}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9754,"byte_end":9755,"line_start":208,"line_end":208,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"Predicate, reflection","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9754,"byte_end":9755,"line_start":208,"line_end":208,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":382},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/mod.rs","byte_start":53975,"byte_end":53983,"line_start":16,"line_end":16,"column_start":23,"column_end":31},"alias_span":null,"name":"is_close","value":"","parent":{"krate":0,"index":362}},{"kind":"Use","ref_id":{"krate":0,"index":1048},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/mod.rs","byte_start":53985,"byte_end":54001,"line_start":16,"line_end":16,"column_start":33,"column_end":49},"alias_span":null,"name":"IsClosePredicate","value":"","parent":{"krate":0,"index":362}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":58991,"byte_end":58997,"line_start":14,"line_end":14,"column_start":27,"column_end":33},"alias_span":null,"name":"exists","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":401},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":58999,"byte_end":59006,"line_start":14,"line_end":14,"column_start":35,"column_end":42},"alias_span":null,"name":"missing","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":1061},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":59008,"byte_end":59026,"line_start":14,"line_end":14,"column_start":44,"column_end":62},"alias_span":null,"name":"ExistencePredicate","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":432},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":59056,"byte_end":59062,"line_start":16,"line_end":16,"column_start":20,"column_end":26},"alias_span":null,"name":"is_dir","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":431},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":59064,"byte_end":59071,"line_start":16,"line_end":16,"column_start":28,"column_end":35},"alias_span":null,"name":"is_file","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":433},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":59073,"byte_end":59083,"line_start":16,"line_end":16,"column_start":37,"column_end":47},"alias_span":null,"name":"is_symlink","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":59085,"byte_end":59102,"line_start":16,"line_end":16,"column_start":49,"column_end":66},"alias_span":null,"name":"FileTypePredicate","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":1108},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":59132,"byte_end":59152,"line_start":18,"line_end":18,"column_start":20,"column_end":40},"alias_span":null,"name":"FileContentPredicate","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":465},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":59154,"byte_end":59177,"line_start":18,"line_end":18,"column_start":42,"column_end":65},"alias_span":null,"name":"PredicateFileContentExt","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":499},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":59207,"byte_end":59214,"line_start":20,"line_end":20,"column_start":20,"column_end":27},"alias_span":null,"name":"eq_file","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":1130},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":59216,"byte_end":59235,"line_start":20,"line_end":20,"column_start":29,"column_end":48},"alias_span":null,"name":"BinaryFilePredicate","value":"","parent":{"krate":0,"index":386}},{"kind":"Use","ref_id":{"krate":0,"index":1144},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":59237,"byte_end":59253,"line_start":20,"line_end":20,"column_start":50,"column_end":66},"alias_span":null,"name":"StrFilePredicate","value":"","parent":{"krate":0,"index":386}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":75765,"byte_end":75766,"line_start":14,"line_end":14,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"ends_with, contains, starts_with, is_empty","parent":{"krate":0,"index":520}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":75765,"byte_end":75766,"line_start":14,"line_end":14,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"PredicateStrExt","parent":{"krate":0,"index":520}},{"kind":"Use","ref_id":{"krate":0,"index":641},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":75915,"byte_end":75919,"line_start":21,"line_end":21,"column_start":28,"column_end":32},"alias_span":null,"name":"diff","value":"","parent":{"krate":0,"index":520}},{"kind":"Use","ref_id":{"krate":0,"index":643},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":75921,"byte_end":75928,"line_start":21,"line_end":21,"column_start":34,"column_end":41},"alias_span":null,"name":"similar","value":"","parent":{"krate":0,"index":520}},{"kind":"Use","ref_id":{"krate":0,"index":1283},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":75930,"byte_end":75949,"line_start":21,"line_end":21,"column_start":43,"column_end":62},"alias_span":null,"name":"DifferencePredicate","value":"","parent":{"krate":0,"index":520}},{"kind":"Use","ref_id":{"krate":0,"index":1299},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":76078,"byte_end":76097,"line_start":25,"line_end":25,"column_start":26,"column_end":45},"alias_span":null,"name":"NormalizedPredicate","value":"","parent":{"krate":0,"index":520}},{"kind":"Use","ref_id":{"krate":0,"index":693},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":76185,"byte_end":76193,"line_start":30,"line_end":30,"column_start":23,"column_end":31},"alias_span":null,"name":"is_match","value":"","parent":{"krate":0,"index":520}},{"kind":"Use","ref_id":{"krate":0,"index":674},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":76195,"byte_end":76205,"line_start":30,"line_end":30,"column_start":33,"column_end":43},"alias_span":null,"name":"RegexError","value":"","parent":{"krate":0,"index":520}},{"kind":"Use","ref_id":{"krate":0,"index":1321},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":76207,"byte_end":76221,"line_start":30,"line_end":30,"column_start":45,"column_end":59},"alias_span":null,"name":"RegexPredicate","value":"","parent":{"krate":0,"index":520}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":363,"byte_end":10020,"line_start":9,"line_end":227,"column_start":1,"column_end":11},"name":"","qualname":"::","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":101},{"krate":0,"index":127},{"krate":0,"index":198},{"krate":0,"index":224},{"krate":0,"index":277},{"krate":0,"index":362},{"krate":0,"index":386},{"krate":0,"index":520},{"krate":0,"index":700}],"decl_id":null,"docs":" Composable first-order predicate functions.","sig":null,"attributes":[{"value":"! Composable first-order predicate functions.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":363,"byte_end":410,"line_start":9,"line_end":9,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":411,"byte_end":414,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! This library implements an interface to \"predicates\" - boolean-valued","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":415,"byte_end":488,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"! functions of one argument. This allows combinatorial logic to be created and","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":489,"byte_end":569,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"! assembled at runtime and then used one or more times for evaluating values.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":570,"byte_end":649,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"! This sort of object is really useful when creating filters and checks that","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":650,"byte_end":728,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"! can be changed at runtime with user interaction - it allows a clean","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":729,"byte_end":800,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"! separation of concerns where the configuration code can be used to build up","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":801,"byte_end":880,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"! a predicate, and then that predicate can be given to the code that does the","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":881,"byte_end":960,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"! actual filtering without the filtering code knowing anything about user","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":961,"byte_end":1036,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"! configuration. See the examples for how this can work.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1037,"byte_end":1095,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1096,"byte_end":1099,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! ## Installation","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1100,"byte_end":1119,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1120,"byte_end":1123,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"! Add this to your `Cargo.toml`:","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1124,"byte_end":1158,"line_start":23,"line_end":23,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1159,"byte_end":1162,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1163,"byte_end":1174,"line_start":25,"line_end":25,"column_start":1,"column_end":12}},{"value":"! [dependencies]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1175,"byte_end":1193,"line_start":26,"line_end":26,"column_start":1,"column_end":19}},{"value":"! predicates = \"1.0.5\"","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1194,"byte_end":1218,"line_start":27,"line_end":27,"column_start":1,"column_end":25}},{"value":"! ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1219,"byte_end":1226,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1227,"byte_end":1230,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"! A [prelude] is available to bring in all extension traits as well as providing","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1231,"byte_end":1313,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"! `prelude::predicate` which focuses on the 90% case of the API.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1314,"byte_end":1380,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"! ```rust","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1381,"byte_end":1392,"line_start":32,"line_end":32,"column_start":1,"column_end":12}},{"value":"! use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1393,"byte_end":1424,"line_start":33,"line_end":33,"column_start":1,"column_end":32}},{"value":"! ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1425,"byte_end":1432,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1433,"byte_end":1436,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! ## Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1437,"byte_end":1452,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1453,"byte_end":1456,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! The simplest predicates are [`predicate::always`] and [`predicate::never`], which always","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1457,"byte_end":1549,"line_start":38,"line_end":38,"column_start":1,"column_end":93}},{"value":"! returns `true` and always returns `false`, respectively. The values are simply ignored when","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1550,"byte_end":1645,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"! evaluating against these predicates:","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1646,"byte_end":1686,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"! ```rust","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1687,"byte_end":1698,"line_start":41,"line_end":41,"column_start":1,"column_end":12}},{"value":"! use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1699,"byte_end":1730,"line_start":42,"line_end":42,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1731,"byte_end":1734,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"! let always_true = predicate::always();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1735,"byte_end":1777,"line_start":44,"line_end":44,"column_start":1,"column_end":43}},{"value":"! assert_eq!(true, always_true.eval(&5));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1778,"byte_end":1821,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"! let always_false = predicate::never();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1822,"byte_end":1864,"line_start":46,"line_end":46,"column_start":1,"column_end":43}},{"value":"! assert_eq!(false, always_false.eval(&5));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1865,"byte_end":1910,"line_start":47,"line_end":47,"column_start":1,"column_end":46}},{"value":"! ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1911,"byte_end":1918,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1919,"byte_end":1922,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! Pre-made predicates are available for types that implement the `PartialOrd` and","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":1923,"byte_end":2006,"line_start":50,"line_end":50,"column_start":1,"column_end":84}},{"value":"! `PartialEq` traits. The following example uses `lt`, but `eq`, `ne`, `le`, `gt`,","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2007,"byte_end":2091,"line_start":51,"line_end":51,"column_start":1,"column_end":85}},{"value":"! `ge` are also available.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2092,"byte_end":2120,"line_start":52,"line_end":52,"column_start":1,"column_end":29}},{"value":"! ```rust","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2121,"byte_end":2132,"line_start":53,"line_end":53,"column_start":1,"column_end":12}},{"value":"! use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2133,"byte_end":2164,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2165,"byte_end":2168,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! let less_than_ten = predicate::lt(10);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2169,"byte_end":2211,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"! assert_eq!(true, less_than_ten.eval(&9));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2212,"byte_end":2257,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"! assert_eq!(false, less_than_ten.eval(&11));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2258,"byte_end":2305,"line_start":58,"line_end":58,"column_start":1,"column_end":48}},{"value":"! ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2306,"byte_end":2313,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2314,"byte_end":2317,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! Any function over a reference to the desired `Item` that returns `bool`","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2318,"byte_end":2393,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"! can easily be made into a `Predicate` using the [`predicate::function`]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2394,"byte_end":2469,"line_start":62,"line_end":62,"column_start":1,"column_end":76}},{"value":"! function.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2470,"byte_end":2483,"line_start":63,"line_end":63,"column_start":1,"column_end":14}},{"value":"! ```rust","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2484,"byte_end":2495,"line_start":64,"line_end":64,"column_start":1,"column_end":12}},{"value":"! use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2496,"byte_end":2527,"line_start":65,"line_end":65,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2528,"byte_end":2531,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! let bound = 5;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2532,"byte_end":2550,"line_start":67,"line_end":67,"column_start":1,"column_end":19}},{"value":"! let predicate_fn = predicate::function(|&x| x >= bound);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2551,"byte_end":2611,"line_start":68,"line_end":68,"column_start":1,"column_end":61}},{"value":"! let between_5_and_10 = predicate_fn.and(predicate::le(10));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2612,"byte_end":2675,"line_start":69,"line_end":69,"column_start":1,"column_end":64}},{"value":"! assert_eq!(true, between_5_and_10.eval(&7));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2676,"byte_end":2724,"line_start":70,"line_end":70,"column_start":1,"column_end":49}},{"value":"! assert_eq!(false, between_5_and_10.eval(&3));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2725,"byte_end":2774,"line_start":71,"line_end":71,"column_start":1,"column_end":50}},{"value":"! ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2775,"byte_end":2782,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2783,"byte_end":2786,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"! The `Predicate` type is actually a trait, and that trait implements a","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2787,"byte_end":2860,"line_start":74,"line_end":74,"column_start":1,"column_end":74}},{"value":"! number of useful combinator functions. For example, evaluating for a value","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2861,"byte_end":2939,"line_start":75,"line_end":75,"column_start":1,"column_end":79}},{"value":"! between two other values can be accomplished as follows:","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":2940,"byte_end":3000,"line_start":76,"line_end":76,"column_start":1,"column_end":61}},{"value":"! ```rust","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3001,"byte_end":3012,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"! use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3013,"byte_end":3044,"line_start":78,"line_end":78,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3045,"byte_end":3048,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"! let between_5_and_10 = predicate::ge(5).and(predicate::le(10));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3049,"byte_end":3116,"line_start":80,"line_end":80,"column_start":1,"column_end":68}},{"value":"! assert_eq!(true, between_5_and_10.eval(&7));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3117,"byte_end":3165,"line_start":81,"line_end":81,"column_start":1,"column_end":49}},{"value":"! assert_eq!(false, between_5_and_10.eval(&11));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3166,"byte_end":3216,"line_start":82,"line_end":82,"column_start":1,"column_end":51}},{"value":"! assert_eq!(false, between_5_and_10.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3217,"byte_end":3266,"line_start":83,"line_end":83,"column_start":1,"column_end":50}},{"value":"! ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3267,"byte_end":3274,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3275,"byte_end":3278,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"! The `Predicate` trait is pretty simple, the core of it is an","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3279,"byte_end":3343,"line_start":86,"line_end":86,"column_start":1,"column_end":65}},{"value":"! implementation of a `eval` function that takes a single argument and","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3344,"byte_end":3416,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"! returns a `bool`. Implementing a custom `Predicate` still allows all the","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3417,"byte_end":3493,"line_start":88,"line_end":88,"column_start":1,"column_end":77}},{"value":"! usual combinators of the `Predicate` trait to work!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3494,"byte_end":3549,"line_start":89,"line_end":89,"column_start":1,"column_end":56}},{"value":"! ```rust","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3550,"byte_end":3561,"line_start":90,"line_end":90,"column_start":1,"column_end":12}},{"value":"! use std::fmt;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3562,"byte_end":3579,"line_start":91,"line_end":91,"column_start":1,"column_end":18}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3580,"byte_end":3583,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"! use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3584,"byte_end":3615,"line_start":93,"line_end":93,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3616,"byte_end":3619,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! struct IsTheAnswer;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3620,"byte_end":3643,"line_start":95,"line_end":95,"column_start":1,"column_end":24}},{"value":"! impl Predicate<i32> for IsTheAnswer {","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3644,"byte_end":3685,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"!     fn eval(&self, variable: &i32) -> bool {","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3686,"byte_end":3734,"line_start":97,"line_end":97,"column_start":1,"column_end":49}},{"value":"!         *variable == 42","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3735,"byte_end":3762,"line_start":98,"line_end":98,"column_start":1,"column_end":28}},{"value":"!     }","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3763,"byte_end":3772,"line_start":99,"line_end":99,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3773,"byte_end":3778,"line_start":100,"line_end":100,"column_start":1,"column_end":6}},{"value":"! impl predicates::reflection::PredicateReflection for IsTheAnswer {}","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3779,"byte_end":3850,"line_start":101,"line_end":101,"column_start":1,"column_end":72}},{"value":"! impl fmt::Display for IsTheAnswer {","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3851,"byte_end":3890,"line_start":102,"line_end":102,"column_start":1,"column_end":40}},{"value":"!     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3891,"byte_end":3953,"line_start":103,"line_end":103,"column_start":1,"column_end":63}},{"value":"!         write!(f, \"var.is_the_answer()\")","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3954,"byte_end":3998,"line_start":104,"line_end":104,"column_start":1,"column_end":45}},{"value":"!     }","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":3999,"byte_end":4008,"line_start":105,"line_end":105,"column_start":1,"column_end":10}},{"value":"! }","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4009,"byte_end":4014,"line_start":106,"line_end":106,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4015,"byte_end":4018,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"! assert_eq!(true, IsTheAnswer.eval(&42));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4019,"byte_end":4063,"line_start":108,"line_end":108,"column_start":1,"column_end":45}},{"value":"! let almost_the_answer = IsTheAnswer.or(predicate::in_iter(vec![41, 43]));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4064,"byte_end":4141,"line_start":109,"line_end":109,"column_start":1,"column_end":78}},{"value":"! assert_eq!(true, almost_the_answer.eval(&41));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4142,"byte_end":4192,"line_start":110,"line_end":110,"column_start":1,"column_end":51}},{"value":"! ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4193,"byte_end":4200,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4201,"byte_end":4204,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"! ## Choosing a Predicate","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4205,"byte_end":4232,"line_start":113,"line_end":113,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4233,"byte_end":4236,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! General predicates","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4237,"byte_end":4259,"line_start":115,"line_end":115,"column_start":1,"column_end":23}},{"value":"! - [`predicate::always`]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4260,"byte_end":4287,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"! - [`predicate::never`]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4288,"byte_end":4314,"line_start":117,"line_end":117,"column_start":1,"column_end":27}},{"value":"! - [`predicate::function`]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4315,"byte_end":4344,"line_start":118,"line_end":118,"column_start":1,"column_end":30}},{"value":"! - [`predicate::in_iter`]: Specified value must be in the `Iterator`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4345,"byte_end":4417,"line_start":119,"line_end":119,"column_start":1,"column_end":73}},{"value":"!   - [`predicate::in_iter(...).sort`]: Optimization for repeatedly called predicates.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4418,"byte_end":4506,"line_start":120,"line_end":120,"column_start":1,"column_end":89}},{"value":"!   - [`predicate::in_hash`]: Optimization for repeatedly called predicates.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4507,"byte_end":4585,"line_start":121,"line_end":121,"column_start":1,"column_end":79}},{"value":"! - [`predicate::eq`]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4586,"byte_end":4609,"line_start":122,"line_end":122,"column_start":1,"column_end":24}},{"value":"!   - [`predicate::float::is_close`]: Use this instead of `eq` for floating point values.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4610,"byte_end":4701,"line_start":123,"line_end":123,"column_start":1,"column_end":92}},{"value":"! - [`predicate::ne`]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4702,"byte_end":4725,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"! - [`predicate::ge`]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4726,"byte_end":4749,"line_start":125,"line_end":125,"column_start":1,"column_end":24}},{"value":"! - [`predicate::gt`]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4750,"byte_end":4773,"line_start":126,"line_end":126,"column_start":1,"column_end":24}},{"value":"! - [`predicate::le`]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4774,"byte_end":4797,"line_start":127,"line_end":127,"column_start":1,"column_end":24}},{"value":"! - [`predicate::lt`]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4798,"byte_end":4821,"line_start":128,"line_end":128,"column_start":1,"column_end":24}},{"value":"! - [`predicate::name`]: Improve readability of failure reporting by providing a meaningful name.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4822,"byte_end":4921,"line_start":129,"line_end":129,"column_start":1,"column_end":100}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4922,"byte_end":4925,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! Combinators","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4926,"byte_end":4941,"line_start":131,"line_end":131,"column_start":1,"column_end":16}},{"value":"! - [`pred_a.and(pred_b)`]: Both predicates must succeed.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":4942,"byte_end":5001,"line_start":132,"line_end":132,"column_start":1,"column_end":60}},{"value":"! - [`pred_a.or(pred_b)`]: One or both predicates must succeed.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5002,"byte_end":5067,"line_start":133,"line_end":133,"column_start":1,"column_end":66}},{"value":"! - [`pred_a.not())`]: The predicate must fail.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5068,"byte_end":5117,"line_start":134,"line_end":134,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5118,"byte_end":5121,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"! `String` predicates","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5122,"byte_end":5145,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"! - [`predicate::str::is_empty`]: Specified string must be empty","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5146,"byte_end":5212,"line_start":137,"line_end":137,"column_start":1,"column_end":67}},{"value":"! - [`str_pred = predicate::path::eq_file(...).utf8`]: Specified string must equal the contents","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5213,"byte_end":5310,"line_start":138,"line_end":138,"column_start":1,"column_end":98}},{"value":"!   of the given file.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5311,"byte_end":5335,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"! - [`predicate::str::similar`]: Same as `eq` except report a diff.  See [`DifferencePredicate`]","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5336,"byte_end":5434,"line_start":140,"line_end":140,"column_start":1,"column_end":99}},{"value":"!   for more features.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5435,"byte_end":5459,"line_start":141,"line_end":141,"column_start":1,"column_end":25}},{"value":"! - [`predicate::str::diff`]: Same as `ne`.  See [`DifferencePredicate`] for more features.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5460,"byte_end":5553,"line_start":142,"line_end":142,"column_start":1,"column_end":94}},{"value":"! - [`predicate::str::starts_with`]: Specified string must start with the given needle.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5554,"byte_end":5643,"line_start":143,"line_end":143,"column_start":1,"column_end":90}},{"value":"! - [`predicate::str::ends_with`]: Specified string must end with the given needle.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5644,"byte_end":5729,"line_start":144,"line_end":144,"column_start":1,"column_end":86}},{"value":"! - [`predicate::str::contains`]: Specified string must contain the given needle.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5730,"byte_end":5813,"line_start":145,"line_end":145,"column_start":1,"column_end":84}},{"value":"!   - [`predicate::str::contains(...).count`]: Required number of times the needle must show up.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5814,"byte_end":5912,"line_start":146,"line_end":146,"column_start":1,"column_end":99}},{"value":"! - [`predicate::str::is_match`]: Specified string must match the given regex.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5913,"byte_end":5993,"line_start":147,"line_end":147,"column_start":1,"column_end":81}},{"value":"!   - [`predicate::str::is_match(...).count`]: Required number of times the match must show up.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":5994,"byte_end":6091,"line_start":148,"line_end":148,"column_start":1,"column_end":98}},{"value":"! - [`str_pred.trim`]: Trim whitespace before passing it to `str_pred`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6092,"byte_end":6165,"line_start":149,"line_end":149,"column_start":1,"column_end":74}},{"value":"! - [`str_pred.normalize`]: Normalize the line endings before passing it to `str_pred`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6166,"byte_end":6255,"line_start":150,"line_end":150,"column_start":1,"column_end":90}},{"value":"! - [`bytes_pred = str_pred.from_utf8()`]: Reuse string predicates in other contexts, like the","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6256,"byte_end":6352,"line_start":151,"line_end":151,"column_start":1,"column_end":97}},{"value":"!   file system.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6353,"byte_end":6371,"line_start":152,"line_end":152,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6372,"byte_end":6375,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"! File system predicates","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6376,"byte_end":6402,"line_start":154,"line_end":154,"column_start":1,"column_end":27}},{"value":"! - [`predicate::path::exists`]: Specified path must exist on disk.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6403,"byte_end":6472,"line_start":155,"line_end":155,"column_start":1,"column_end":70}},{"value":"! - [`predicate::path::missing`]: Specified path must not exist on disk.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6473,"byte_end":6547,"line_start":156,"line_end":156,"column_start":1,"column_end":75}},{"value":"! - [`predicate::path::is_dir`]: Specified path is a directory.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6548,"byte_end":6613,"line_start":157,"line_end":157,"column_start":1,"column_end":66}},{"value":"! - [`predicate::path::is_file`]: Specified path is a file.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6614,"byte_end":6675,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"! - [`predicate::path::is_symlink`]: Specified path is a symlink.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6676,"byte_end":6743,"line_start":159,"line_end":159,"column_start":1,"column_end":68}},{"value":"! - [`path_pred = predicate::path::eq_file`]: Specified path's contents must equal the contents of the given","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6744,"byte_end":6854,"line_start":160,"line_end":160,"column_start":1,"column_end":111}},{"value":"!   file.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6855,"byte_end":6866,"line_start":161,"line_end":161,"column_start":1,"column_end":12}},{"value":"! - [`path_pred = bytes_pred.from_file_path`]: Specified path's contents must equal the `bytes_pred`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6867,"byte_end":6970,"line_start":162,"line_end":162,"column_start":1,"column_end":104}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6971,"byte_end":6974,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"! [prelude]: prelude/index.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":6975,"byte_end":7008,"line_start":164,"line_end":164,"column_start":1,"column_end":34}},{"value":"! [`DifferencePredicate`]: https://docs.rs/predicates/0.9.1/predicates/str/struct.DifferencePredicate.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7009,"byte_end":7117,"line_start":165,"line_end":165,"column_start":1,"column_end":109}},{"value":"! [`bytes_pred = str_pred.from_utf8()`]: prelude/trait.PredicateStrExt.html#method.from_utf8","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7118,"byte_end":7212,"line_start":166,"line_end":166,"column_start":1,"column_end":95}},{"value":"! [`path_pred = bytes_pred.from_file_path`]: prelude/trait.PredicateFileContentExt.html#method.from_file_path","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7213,"byte_end":7324,"line_start":167,"line_end":167,"column_start":1,"column_end":112}},{"value":"! [`path_pred = predicate::path::eq_file`]: prelude/predicate/path/fn.eq_file.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7325,"byte_end":7409,"line_start":168,"line_end":168,"column_start":1,"column_end":85}},{"value":"! [`pred_a.and(pred_b)`]: boolean/trait.PredicateBooleanExt.html#method.and","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7410,"byte_end":7487,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"! [`pred_a.not())`]: boolean/trait.PredicateBooleanExt.html#method.not","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7488,"byte_end":7560,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"! [`pred_a.or(pred_b)`]: boolean/trait.PredicateBooleanExt.html#method.or","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7561,"byte_end":7636,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"! [`predicate::always`]: constant/fn.always.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7637,"byte_end":7687,"line_start":172,"line_end":172,"column_start":1,"column_end":51}},{"value":"! [`predicate::eq`]: ord/fn.eq.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7688,"byte_end":7725,"line_start":173,"line_end":173,"column_start":1,"column_end":38}},{"value":"! [`predicate::float::is_close`]: prelude/predicate/float/fn.is_close.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7726,"byte_end":7802,"line_start":174,"line_end":174,"column_start":1,"column_end":77}},{"value":"! [`predicate::function`]: function/fn.function.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7803,"byte_end":7857,"line_start":175,"line_end":175,"column_start":1,"column_end":55}},{"value":"! [`predicate::ge`]: ord/fn.ge.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7858,"byte_end":7895,"line_start":176,"line_end":176,"column_start":1,"column_end":38}},{"value":"! [`predicate::gt`]: ord/fn.gt.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7896,"byte_end":7933,"line_start":177,"line_end":177,"column_start":1,"column_end":38}},{"value":"! [`predicate::in_hash`]: iter/fn.in_hash.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7934,"byte_end":7982,"line_start":178,"line_end":178,"column_start":1,"column_end":49}},{"value":"! [`predicate::in_iter(...).sort`]: iter/struct.InPredicate.html#method.sort","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":7983,"byte_end":8061,"line_start":179,"line_end":179,"column_start":1,"column_end":79}},{"value":"! [`predicate::in_iter`]: iter/fn.in_iter.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8062,"byte_end":8110,"line_start":180,"line_end":180,"column_start":1,"column_end":49}},{"value":"! [`predicate::le`]: ord/fn.le.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8111,"byte_end":8148,"line_start":181,"line_end":181,"column_start":1,"column_end":38}},{"value":"! [`predicate::lt`]: ord/fn.lt.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8149,"byte_end":8186,"line_start":182,"line_end":182,"column_start":1,"column_end":38}},{"value":"! [`predicate::name`]: name/trait.PredicateNameExt.html#method.name","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8187,"byte_end":8256,"line_start":183,"line_end":183,"column_start":1,"column_end":70}},{"value":"! [`predicate::ne`]: ord/fn.ne.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8257,"byte_end":8294,"line_start":184,"line_end":184,"column_start":1,"column_end":38}},{"value":"! [`predicate::never`]: constant/fn.never.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8295,"byte_end":8343,"line_start":185,"line_end":185,"column_start":1,"column_end":49}},{"value":"! [`predicate::path::exists`]: prelude/predicate/path/fn.exists.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8344,"byte_end":8414,"line_start":186,"line_end":186,"column_start":1,"column_end":71}},{"value":"! [`predicate::path::is_dir`]: prelude/predicate/path/fn.is_dir.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8415,"byte_end":8485,"line_start":187,"line_end":187,"column_start":1,"column_end":71}},{"value":"! [`predicate::path::is_file`]: prelude/predicate/path/fn.is_file.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8486,"byte_end":8558,"line_start":188,"line_end":188,"column_start":1,"column_end":73}},{"value":"! [`predicate::path::is_symlink`]: prelude/predicate/path/fn.is_symlink.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8559,"byte_end":8637,"line_start":189,"line_end":189,"column_start":1,"column_end":79}},{"value":"! [`predicate::path::missing`]: prelude/predicate/path/fn.missing.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8638,"byte_end":8710,"line_start":190,"line_end":190,"column_start":1,"column_end":73}},{"value":"! [`predicate::str::contains(...).count`]: str/struct.ContainsPredicate.html#method.count","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8711,"byte_end":8802,"line_start":191,"line_end":191,"column_start":1,"column_end":92}},{"value":"! [`predicate::str::contains`]: prelude/predicate/str/fn.contains.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8803,"byte_end":8875,"line_start":192,"line_end":192,"column_start":1,"column_end":73}},{"value":"! [`predicate::str::diff`]: prelude/predicate/str/fn.diff.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8876,"byte_end":8940,"line_start":193,"line_end":193,"column_start":1,"column_end":65}},{"value":"! [`predicate::str::ends_with`]: prelude/predicate/str/fn.ends_with.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":8941,"byte_end":9015,"line_start":194,"line_end":194,"column_start":1,"column_end":75}},{"value":"! [`predicate::str::is_empty`]: prelude/predicate/str/fn.is_empty.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9016,"byte_end":9088,"line_start":195,"line_end":195,"column_start":1,"column_end":73}},{"value":"! [`predicate::str::is_match(...).count`]: str/struct.RegexPredicate.html#method.count","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9089,"byte_end":9177,"line_start":196,"line_end":196,"column_start":1,"column_end":89}},{"value":"! [`predicate::str::is_match`]: prelude/predicate/str/fn.is_match.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9178,"byte_end":9250,"line_start":197,"line_end":197,"column_start":1,"column_end":73}},{"value":"! [`predicate::str::similar`]: prelude/predicate/str/fn.similar.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9251,"byte_end":9321,"line_start":198,"line_end":198,"column_start":1,"column_end":71}},{"value":"! [`predicate::str::starts_with`]: prelude/predicate/str/fn.starts_with.html","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9322,"byte_end":9400,"line_start":199,"line_end":199,"column_start":1,"column_end":79}},{"value":"! [`str_pred = predicate::path::eq_file(...).utf8`]: path/struct.BinaryFilePredicate.html#method.utf8","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9401,"byte_end":9504,"line_start":200,"line_end":200,"column_start":1,"column_end":104}},{"value":"! [`str_pred.normalize`]: prelude/trait.PredicateStrExt.html#method.normalize","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9505,"byte_end":9584,"line_start":201,"line_end":201,"column_start":1,"column_end":80}},{"value":"! [`str_pred.trim`]: prelude/trait.PredicateStrExt.html#method.trim","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9585,"byte_end":9654,"line_start":202,"line_end":202,"column_start":1,"column_end":70}},{"value":"warn(missing_docs, missing_debug_implementations)","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9656,"byte_end":9709,"line_start":204,"line_end":204,"column_start":1,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10}],"decl_id":null,"docs":" Module that contains the essentials for working with predicates.\n","sig":null,"attributes":[{"value":"! Module that contains the essentials for working with predicates.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10386,"byte_end":10454,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":10},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10721,"byte_end":10730,"line_start":19,"line_end":19,"column_start":9,"column_end":18},"name":"predicate","qualname":"::prelude::predicate","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","parent":null,"children":[{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":35},{"krate":0,"index":44}],"decl_id":null,"docs":" Predicate factories\n","sig":null,"attributes":[{"value":"/ Predicate factories","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10689,"byte_end":10712,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":25},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11072,"byte_end":11075,"line_start":29,"line_end":29,"column_start":13,"column_end":16},"name":"str","qualname":"::prelude::predicate::str","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34}],"decl_id":null,"docs":" `str` Predicate factories","sig":null,"attributes":[{"value":"/ `str` Predicate factories","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10953,"byte_end":10982,"line_start":26,"line_end":26,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10987,"byte_end":10990,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This module contains predicates specific to string handling.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":10995,"byte_end":11059,"line_start":28,"line_end":28,"column_start":5,"column_end":69}}]},{"kind":"Mod","id":{"krate":0,"index":35},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11467,"byte_end":11471,"line_start":43,"line_end":43,"column_start":13,"column_end":17},"name":"path","qualname":"::prelude::predicate::path","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" `Path` Predicate factories","sig":null,"attributes":[{"value":"/ `Path` Predicate factories","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11349,"byte_end":11379,"line_start":40,"line_end":40,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11384,"byte_end":11387,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ This module contains predicates specific to path handling.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11392,"byte_end":11454,"line_start":42,"line_end":42,"column_start":5,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":44},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11749,"byte_end":11754,"line_start":52,"line_end":52,"column_start":13,"column_end":18},"name":"float","qualname":"::prelude::predicate::float","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","parent":null,"children":[{"krate":0,"index":45}],"decl_id":null,"docs":" `f64` Predicate factories","sig":null,"attributes":[{"value":"/ `f64` Predicate factories","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11631,"byte_end":11660,"line_start":49,"line_end":49,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11665,"byte_end":11668,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This module contains predicates specific to float handling.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/prelude.rs","byte_start":11673,"byte_end":11736,"line_start":51,"line_end":51,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":52},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":12506,"byte_end":12518,"line_start":20,"line_end":20,"column_start":12,"column_end":24},"name":"BoxPredicate","qualname":"::boxed::BoxPredicate","value":"","parent":null,"children":[],"decl_id":null,"docs":" `Predicate` that wraps another `Predicate` as a trait object, allowing\n sized storage of predicate types.\n","sig":null,"attributes":[{"value":"/ `Predicate` that wraps another `Predicate` as a trait object, allowing","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":12382,"byte_end":12456,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/ sized storage of predicate types.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":12457,"byte_end":12494,"line_start":19,"line_end":19,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":12772,"byte_end":12775,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<BoxPredicate<Item>>::new","value":"pub fn new<P: Predicate<Item>>(P) -> BoxPredicate<Item> where P: Send + Sync +\n'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BoxPredicate`, a wrapper around a dynamically-dispatched\n `Predicate` type with useful trait impls.\n","sig":null,"attributes":[{"value":"/ Creates a new `BoxPredicate`, a wrapper around a dynamically-dispatched","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":12635,"byte_end":12710,"line_start":26,"line_end":26,"column_start":5,"column_end":80}},{"value":"/ `Predicate` type with useful trait impls.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":12715,"byte_end":12760,"line_start":27,"line_end":27,"column_start":5,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14024,"byte_end":14039,"line_start":81,"line_end":81,"column_start":11,"column_end":26},"name":"PredicateBoxExt","qualname":"::boxed::PredicateBoxExt","value":"PredicateBoxExt<Item: ?Sized>","parent":null,"children":[{"krate":0,"index":79}],"decl_id":null,"docs":" `Predicate` extension for boxing a `Predicate`.\n","sig":null,"attributes":[{"value":"/ `Predicate` extension for boxing a `Predicate`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":13962,"byte_end":14013,"line_start":80,"line_end":80,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14998,"byte_end":15003,"line_start":109,"line_end":109,"column_start":8,"column_end":13},"name":"boxed","qualname":"::boxed::PredicateBoxExt::boxed","value":"pub fn boxed(Self) -> BoxPredicate<Item> where Self: Sized + Send + Sync +\n'static","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Returns a `BoxPredicate` wrapper around this `Predicate` type.","sig":null,"attributes":[{"value":"/ Returns a `BoxPredicate` wrapper around this `Predicate` type.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14093,"byte_end":14159,"line_start":85,"line_end":85,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14164,"byte_end":14167,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Returns a `BoxPredicate` wrapper around this `Predicate type. The","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14172,"byte_end":14241,"line_start":87,"line_end":87,"column_start":5,"column_end":74}},{"value":"/ `BoxPredicate` type has a number of useful properties:","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14246,"byte_end":14304,"line_start":88,"line_end":88,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14309,"byte_end":14312,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/   - It stores the inner predicate as a trait object, so the type of","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14317,"byte_end":14388,"line_start":90,"line_end":90,"column_start":5,"column_end":76}},{"value":"/     `BoxPredicate` will always be the same even if steps are added or","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14393,"byte_end":14466,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/     removed from the predicate.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14471,"byte_end":14506,"line_start":92,"line_end":92,"column_start":5,"column_end":40}},{"value":"/   - It is a common type, allowing it to be stored in vectors or other","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14511,"byte_end":14584,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/     collection types.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14589,"byte_end":14614,"line_start":94,"line_end":94,"column_start":5,"column_end":30}},{"value":"/   - It implements `Debug` and `Display`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14619,"byte_end":14663,"line_start":95,"line_end":95,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14668,"byte_end":14671,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14676,"byte_end":14690,"line_start":97,"line_end":97,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14695,"byte_end":14698,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14703,"byte_end":14710,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14715,"byte_end":14746,"line_start":100,"line_end":100,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14751,"byte_end":14754,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let predicates = vec![","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14759,"byte_end":14785,"line_start":102,"line_end":102,"column_start":5,"column_end":31}},{"value":"/     predicate::always().boxed(),","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14790,"byte_end":14826,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/     predicate::never().boxed(),","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14831,"byte_end":14866,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/ ];","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14871,"byte_end":14877,"line_start":105,"line_end":105,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(true, predicates[0].eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14882,"byte_end":14927,"line_start":106,"line_end":106,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(false, predicates[1].eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14932,"byte_end":14978,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":14983,"byte_end":14990,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":84},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constant","qualname":"::constant","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":717},{"krate":0,"index":729},{"krate":0,"index":727},{"krate":0,"index":726},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":89},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100}],"decl_id":null,"docs":" Definition of a constant (always true or always false) `Predicate`.\n","sig":null,"attributes":[{"value":"! Definition of a constant (always true or always false) `Predicate`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":15568,"byte_end":15639,"line_start":9,"line_end":9,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":717},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":15924,"byte_end":15940,"line_start":21,"line_end":21,"column_start":12,"column_end":28},"name":"BooleanPredicate","qualname":"::constant::BooleanPredicate","value":"BooleanPredicate {  }","parent":null,"children":[{"krate":0,"index":718}],"decl_id":null,"docs":" Predicate that always returns a constant (boolean) result.","sig":null,"attributes":[{"value":"/ Predicate that always returns a constant (boolean) result.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":15720,"byte_end":15782,"line_start":17,"line_end":17,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":15783,"byte_end":15786,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::always` and `predicate::never` functions.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":15787,"byte_end":15867,"line_start":19,"line_end":19,"column_start":1,"column_end":81}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17128,"byte_end":17134,"line_start":62,"line_end":62,"column_start":8,"column_end":14},"name":"always","qualname":"::constant::always","value":"pub fn always() -> BooleanPredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that always returns `true`.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that always returns `true`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16690,"byte_end":16747,"line_start":48,"line_end":48,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16748,"byte_end":16751,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16752,"byte_end":16766,"line_start":50,"line_end":50,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16767,"byte_end":16770,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16771,"byte_end":16778,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16779,"byte_end":16810,"line_start":53,"line_end":53,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16811,"byte_end":16814,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::always();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16815,"byte_end":16858,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(true, predicate_fn.eval(&5));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16859,"byte_end":16903,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(true, predicate_fn.eval(&10));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16904,"byte_end":16949,"line_start":57,"line_end":57,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(true, predicate_fn.eval(&15));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16950,"byte_end":16995,"line_start":58,"line_end":58,"column_start":1,"column_end":46}},{"value":"/ // Won't work - Predicates can only operate on a single type","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16996,"byte_end":17060,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ // assert_eq!(true, predicate_fn.eval(\"hello\"))","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17061,"byte_end":17112,"line_start":60,"line_end":60,"column_start":1,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17113,"byte_end":17120,"line_start":61,"line_end":61,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":100},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17642,"byte_end":17647,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"never","qualname":"::constant::never","value":"pub fn never() -> BooleanPredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that always returns `false`.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that always returns `false`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17200,"byte_end":17258,"line_start":66,"line_end":66,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17259,"byte_end":17262,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17263,"byte_end":17277,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17278,"byte_end":17281,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17282,"byte_end":17289,"line_start":70,"line_end":70,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17290,"byte_end":17321,"line_start":71,"line_end":71,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17322,"byte_end":17325,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::never();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17326,"byte_end":17368,"line_start":73,"line_end":73,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(false, predicate_fn.eval(&5));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17369,"byte_end":17414,"line_start":74,"line_end":74,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(false, predicate_fn.eval(&10));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17415,"byte_end":17461,"line_start":75,"line_end":75,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(false, predicate_fn.eval(&15));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17462,"byte_end":17508,"line_start":76,"line_end":76,"column_start":1,"column_end":47}},{"value":"/ // Won't work - Predicates can only operate on a single type","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17509,"byte_end":17573,"line_start":77,"line_end":77,"column_start":1,"column_end":65}},{"value":"/ // assert_eq!(false, predicate_fn.eval(\"hello\"))","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17574,"byte_end":17626,"line_start":78,"line_end":78,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":17627,"byte_end":17634,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":101},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"function","qualname":"::function","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":1431},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":731},{"krate":0,"index":759},{"krate":0,"index":755},{"krate":0,"index":752},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":737},{"krate":0,"index":740},{"krate":0,"index":107},{"krate":0,"index":111},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":124}],"decl_id":null,"docs":" Definition of `Predicate` for wrapping a `Fn(&T) -> bool`\n","sig":null,"attributes":[{"value":"! Definition of `Predicate` for wrapping a `Fn(&T) -> bool`","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18077,"byte_end":18138,"line_start":9,"line_end":9,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18446,"byte_end":18457,"line_start":21,"line_end":21,"column_start":12,"column_end":23},"name":"FnPredicate","qualname":"::function::FnPredicate","value":"FnPredicate {  }","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736}],"decl_id":null,"docs":" Predicate that wraps a function over a reference that returns a `bool`.\n This type is returned by the `predicate::function` function.\n","sig":null,"attributes":[{"value":"/ Predicate that wraps a function over a reference that returns a `bool`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18249,"byte_end":18324,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ This type is returned by the `predicate::function` function.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18325,"byte_end":18389,"line_start":19,"line_end":19,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19088,"byte_end":19095,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"fn_name","qualname":"<FnPredicate<F, T>>::fn_name","value":"pub fn fn_name(Self, &'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provide a descriptive name for this function.","sig":null,"attributes":[{"value":"/ Provide a descriptive name for this function.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18663,"byte_end":18712,"line_start":36,"line_end":36,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18717,"byte_end":18720,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18725,"byte_end":18739,"line_start":38,"line_end":38,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18744,"byte_end":18747,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18752,"byte_end":18759,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18764,"byte_end":18795,"line_start":41,"line_end":41,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18800,"byte_end":18803,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ struct Example {","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18808,"byte_end":18828,"line_start":43,"line_end":43,"column_start":5,"column_end":25}},{"value":"/     string: String,","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18833,"byte_end":18856,"line_start":44,"line_end":44,"column_start":5,"column_end":28}},{"value":"/     number: i32,","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18861,"byte_end":18881,"line_start":45,"line_end":45,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18886,"byte_end":18891,"line_start":46,"line_end":46,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18896,"byte_end":18899,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ let string_check = predicate::function(|x: &Example| x.string == \"hello\")","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18904,"byte_end":18981,"line_start":48,"line_end":48,"column_start":5,"column_end":82}},{"value":"/     .fn_name(\"is_hello\");","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18986,"byte_end":19015,"line_start":49,"line_end":49,"column_start":5,"column_end":34}},{"value":"/ println!(\"predicate: {}\", string_check);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19020,"byte_end":19064,"line_start":50,"line_end":50,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19069,"byte_end":19076,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":124},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20625,"byte_end":20633,"line_start":111,"line_end":111,"column_start":8,"column_end":16},"name":"function","qualname":"::function::function","value":"pub fn function<F, T: ?Sized>(F) -> FnPredicate<F, T> where F: Fn(&T) -> bool,\nT","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that wraps over the given function. The returned\n type implements `Predicate` and therefore has all combinators available to\n it.","sig":null,"attributes":[{"value":"/ Creates a new predicate that wraps over the given function. The returned","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19841,"byte_end":19917,"line_start":89,"line_end":89,"column_start":1,"column_end":77}},{"value":"/ type implements `Predicate` and therefore has all combinators available to","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19918,"byte_end":19996,"line_start":90,"line_end":90,"column_start":1,"column_end":79}},{"value":"/ it.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19997,"byte_end":20004,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20005,"byte_end":20008,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20009,"byte_end":20023,"line_start":93,"line_end":93,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20024,"byte_end":20027,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20028,"byte_end":20035,"line_start":95,"line_end":95,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20036,"byte_end":20067,"line_start":96,"line_end":96,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20068,"byte_end":20071,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ struct Example {","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20072,"byte_end":20092,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/     string: String,","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20093,"byte_end":20116,"line_start":99,"line_end":99,"column_start":1,"column_end":24}},{"value":"/     number: i32,","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20117,"byte_end":20137,"line_start":100,"line_end":100,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20138,"byte_end":20143,"line_start":101,"line_end":101,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20144,"byte_end":20147,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let string_check = predicate::function(|x: &Example| x.string == \"hello\");","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20148,"byte_end":20226,"line_start":103,"line_end":103,"column_start":1,"column_end":79}},{"value":"/ let number_check = predicate::function(|x: &Example| x.number == 42);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20227,"byte_end":20300,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ let predicate_fn = string_check.and(number_check);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20301,"byte_end":20355,"line_start":105,"line_end":105,"column_start":1,"column_end":55}},{"value":"/ let good_example = Example { string: \"hello\".into(), number: 42 };","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20356,"byte_end":20426,"line_start":106,"line_end":106,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(true, predicate_fn.eval(&good_example));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20427,"byte_end":20482,"line_start":107,"line_end":107,"column_start":1,"column_end":56}},{"value":"/ let bad_example = Example { string: \"goodbye\".into(), number: 0 };","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20483,"byte_end":20553,"line_start":108,"line_end":108,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(false, predicate_fn.eval(&bad_example));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20554,"byte_end":20609,"line_start":109,"line_end":109,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":20610,"byte_end":20617,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":127},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":1443},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":763},{"krate":0,"index":780},{"krate":0,"index":777},{"krate":0,"index":771},{"krate":0,"index":773},{"krate":0,"index":766},{"krate":0,"index":768},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":143},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":783},{"krate":0,"index":800},{"krate":0,"index":797},{"krate":0,"index":791},{"krate":0,"index":793},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":159},{"krate":0,"index":164},{"krate":0,"index":170},{"krate":0,"index":174},{"krate":0,"index":803},{"krate":0,"index":820},{"krate":0,"index":817},{"krate":0,"index":811},{"krate":0,"index":813},{"krate":0,"index":806},{"krate":0,"index":808},{"krate":0,"index":177},{"krate":0,"index":182},{"krate":0,"index":188},{"krate":0,"index":192},{"krate":0,"index":195}],"decl_id":null,"docs":" Definition of `Predicate`s for comparisons of membership in a set.\n","sig":null,"attributes":[{"value":"! Definition of `Predicate`s for comparisons of membership in a set.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":21321,"byte_end":21391,"line_start":9,"line_end":9,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":763},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22127,"byte_end":22138,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"InPredicate","qualname":"::iter::InPredicate","value":"InPredicate {  }","parent":null,"children":[{"krate":0,"index":765}],"decl_id":null,"docs":" Predicate that returns `true` if `variable` is a member of the pre-defined\n set, otherwise returns `false`.","sig":null,"attributes":[{"value":"/ Predicate that returns `true` if `variable` is a member of the pre-defined","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":21553,"byte_end":21631,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ set, otherwise returns `false`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":21632,"byte_end":21667,"line_start":21,"line_end":21,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":21668,"byte_end":21671,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation places the fewest restrictions on the","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":21672,"byte_end":21743,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/ underlying `Item` type at the expense of having the least performant","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":21744,"byte_end":21816,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/ implementation (linear search). If the type to be searched is `Hash + Eq`,","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":21817,"byte_end":21895,"line_start":25,"line_end":25,"column_start":1,"column_end":79}},{"value":"/ it is much more efficient to use `HashableInPredicate` and","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":21896,"byte_end":21958,"line_start":26,"line_end":26,"column_start":1,"column_end":63}},{"value":"/ `in_hash`. The implementation-specific predicates will be","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":21959,"byte_end":22020,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/ deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22021,"byte_end":22076,"line_start":28,"line_end":28,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":23283,"byte_end":23287,"line_start":64,"line_end":64,"column_start":12,"column_end":16},"name":"sort","qualname":"<InPredicate<T>>::sort","value":"pub fn sort(Self) -> OrdInPredicate<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n contained with the set of items provided.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22284,"byte_end":22364,"line_start":41,"line_end":41,"column_start":5,"column_end":85}},{"value":"/ contained with the set of items provided.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22369,"byte_end":22414,"line_start":42,"line_end":42,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22419,"byte_end":22422,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Note that this implementation requires `Item` to be `Ord`. The","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22427,"byte_end":22493,"line_start":44,"line_end":44,"column_start":5,"column_end":71}},{"value":"/ `InPredicate` uses a less efficient search algorithm but only","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22498,"byte_end":22563,"line_start":45,"line_end":45,"column_start":5,"column_end":70}},{"value":"/ requires `Item` implement `PartialEq`. The implementation-specific","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22568,"byte_end":22638,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ predicates will be deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22643,"byte_end":22717,"line_start":47,"line_end":47,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22722,"byte_end":22725,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22730,"byte_end":22744,"line_start":49,"line_end":49,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22749,"byte_end":22752,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22757,"byte_end":22764,"line_start":51,"line_end":51,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22769,"byte_end":22800,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22805,"byte_end":22808,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::in_iter(vec![1, 3, 5]).sort();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22813,"byte_end":22877,"line_start":54,"line_end":54,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(true, predicate_fn.eval(&1));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22882,"byte_end":22926,"line_start":55,"line_end":55,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(false, predicate_fn.eval(&2));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22931,"byte_end":22976,"line_start":56,"line_end":56,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(true, predicate_fn.eval(&3));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22981,"byte_end":23025,"line_start":57,"line_end":57,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":23030,"byte_end":23033,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::in_iter(vec![\"a\", \"c\", \"e\"]).sort();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":23038,"byte_end":23108,"line_start":59,"line_end":59,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"a\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":23113,"byte_end":23158,"line_start":60,"line_end":60,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"b\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":23163,"byte_end":23209,"line_start":61,"line_end":61,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"c\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":23214,"byte_end":23259,"line_start":62,"line_end":62,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":23264,"byte_end":23271,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":156},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25835,"byte_end":25842,"line_start":147,"line_end":147,"column_start":8,"column_end":15},"name":"in_iter","qualname":"::iter::in_iter","value":"pub fn in_iter<I, T>(I) -> InPredicate<T> where T: PartialEq + fmt::Debug,\nI: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n contained with the set of items provided.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":24669,"byte_end":24749,"line_start":118,"line_end":118,"column_start":1,"column_end":81}},{"value":"/ contained with the set of items provided.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":24750,"byte_end":24795,"line_start":119,"line_end":119,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":24796,"byte_end":24799,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation places the fewest restrictions on the","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":24800,"byte_end":24871,"line_start":121,"line_end":121,"column_start":1,"column_end":72}},{"value":"/ underlying `Item` type at the expense of having the least performant","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":24872,"byte_end":24944,"line_start":122,"line_end":122,"column_start":1,"column_end":73}},{"value":"/ implementation (linear search). If the type to be searched is `Hash + Eq`,","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":24945,"byte_end":25023,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ it is much more efficient to use `HashableInPredicate` and","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25024,"byte_end":25086,"line_start":124,"line_end":124,"column_start":1,"column_end":63}},{"value":"/ `in_hash`. The implementation-specific predicates will be","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25087,"byte_end":25148,"line_start":125,"line_end":125,"column_start":1,"column_end":62}},{"value":"/ deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25149,"byte_end":25204,"line_start":126,"line_end":126,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25205,"byte_end":25208,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ If you need to optimize this","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25209,"byte_end":25241,"line_start":128,"line_end":128,"column_start":1,"column_end":33}},{"value":"/ - Type is `Ord`, call `sort()` on this predicate.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25242,"byte_end":25295,"line_start":129,"line_end":129,"column_start":1,"column_end":54}},{"value":"/ - Type is `Hash`, replace `in_iter` with `in_hash`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25296,"byte_end":25351,"line_start":130,"line_end":130,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25352,"byte_end":25355,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25356,"byte_end":25370,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25371,"byte_end":25374,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25375,"byte_end":25382,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25383,"byte_end":25414,"line_start":135,"line_end":135,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25415,"byte_end":25418,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::in_iter(vec![1, 3, 5]);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25419,"byte_end":25476,"line_start":137,"line_end":137,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(true, predicate_fn.eval(&1));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25477,"byte_end":25521,"line_start":138,"line_end":138,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(&2));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25522,"byte_end":25567,"line_start":139,"line_end":139,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(true, predicate_fn.eval(&3));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25568,"byte_end":25612,"line_start":140,"line_end":140,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25613,"byte_end":25616,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::in_iter(vec![\"a\", \"c\", \"e\"]);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25617,"byte_end":25680,"line_start":142,"line_end":142,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"a\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25681,"byte_end":25726,"line_start":143,"line_end":143,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"b\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25727,"byte_end":25773,"line_start":144,"line_end":144,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"c\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25774,"byte_end":25819,"line_start":145,"line_end":145,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":25820,"byte_end":25827,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":783},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26556,"byte_end":26570,"line_start":167,"line_end":167,"column_start":12,"column_end":26},"name":"OrdInPredicate","qualname":"::iter::OrdInPredicate","value":"OrdInPredicate {  }","parent":null,"children":[{"krate":0,"index":785}],"decl_id":null,"docs":" Predicate that returns `true` if `variable` is a member of the pre-defined\n set, otherwise returns `false`.","sig":null,"attributes":[{"value":"/ Predicate that returns `true` if `variable` is a member of the pre-defined","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26036,"byte_end":26114,"line_start":157,"line_end":157,"column_start":1,"column_end":79}},{"value":"/ set, otherwise returns `false`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26115,"byte_end":26150,"line_start":158,"line_end":158,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26151,"byte_end":26154,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation requires `Item` to be `Ord`. The","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26155,"byte_end":26221,"line_start":160,"line_end":160,"column_start":1,"column_end":67}},{"value":"/ `InPredicate` uses a less efficient search algorithm but only","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26222,"byte_end":26287,"line_start":161,"line_end":161,"column_start":1,"column_end":66}},{"value":"/ requires `Item` implement `PartialEq`. The implementation-specific","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26288,"byte_end":26358,"line_start":162,"line_end":162,"column_start":1,"column_end":71}},{"value":"/ predicates will be deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26359,"byte_end":26433,"line_start":163,"line_end":163,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26434,"byte_end":26437,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::in_iter(...).sort` function.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26438,"byte_end":26505,"line_start":165,"line_end":165,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":803},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":28378,"byte_end":28397,"line_start":229,"line_end":229,"column_start":12,"column_end":31},"name":"HashableInPredicate","qualname":"::iter::HashableInPredicate","value":"HashableInPredicate {  }","parent":null,"children":[{"krate":0,"index":805}],"decl_id":null,"docs":" Predicate that returns `true` if `variable` is a member of the pre-defined\n `HashSet`, otherwise returns `false`.","sig":null,"attributes":[{"value":"/ Predicate that returns `true` if `variable` is a member of the pre-defined","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":27856,"byte_end":27934,"line_start":219,"line_end":219,"column_start":1,"column_end":79}},{"value":"/ `HashSet`, otherwise returns `false`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":27935,"byte_end":27976,"line_start":220,"line_end":220,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":27977,"byte_end":27980,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation requires `Item` to be `Hash + Eq`. The","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":27981,"byte_end":28053,"line_start":222,"line_end":222,"column_start":1,"column_end":73}},{"value":"/ `InPredicate` uses a less efficient search algorithm but only","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":28054,"byte_end":28119,"line_start":223,"line_end":223,"column_start":1,"column_end":66}},{"value":"/ requires `Item` implement `PartialEq`. The implementation-specific","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":28120,"byte_end":28190,"line_start":224,"line_end":224,"column_start":1,"column_end":71}},{"value":"/ predicates will be deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":28191,"byte_end":28265,"line_start":225,"line_end":225,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":28266,"byte_end":28269,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::in_hash` function.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":28270,"byte_end":28327,"line_start":227,"line_end":227,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":195},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30610,"byte_end":30617,"line_start":304,"line_end":304,"column_start":8,"column_end":15},"name":"in_hash","qualname":"::iter::in_hash","value":"pub fn in_hash<I, T>(I) -> HashableInPredicate<T> where T: Hash + Eq +\nfmt::Debug, I: IntoIterator<Item = T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n contained with the set of items provided.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":29711,"byte_end":29791,"line_start":281,"line_end":281,"column_start":1,"column_end":81}},{"value":"/ contained with the set of items provided.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":29792,"byte_end":29837,"line_start":282,"line_end":282,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":29838,"byte_end":29841,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ Note that this implementation requires `Item` to be `Hash + Eq`. The","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":29842,"byte_end":29914,"line_start":284,"line_end":284,"column_start":1,"column_end":73}},{"value":"/ `InPredicate` uses a less efficient search algorithm but only","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":29915,"byte_end":29980,"line_start":285,"line_end":285,"column_start":1,"column_end":66}},{"value":"/ requires `Item` implement `PartialEq`. The implementation-specific","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":29981,"byte_end":30051,"line_start":286,"line_end":286,"column_start":1,"column_end":71}},{"value":"/ predicates will be deprecated when Rust supports trait specialization.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30052,"byte_end":30126,"line_start":287,"line_end":287,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30127,"byte_end":30130,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30131,"byte_end":30145,"line_start":289,"line_end":289,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30146,"byte_end":30149,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30150,"byte_end":30157,"line_start":291,"line_end":291,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30158,"byte_end":30189,"line_start":292,"line_end":292,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30190,"byte_end":30193,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::in_hash(vec![1, 3, 5]);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30194,"byte_end":30251,"line_start":294,"line_end":294,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(true, predicate_fn.eval(&1));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30252,"byte_end":30296,"line_start":295,"line_end":295,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(&2));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30297,"byte_end":30342,"line_start":296,"line_end":296,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(true, predicate_fn.eval(&3));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30343,"byte_end":30387,"line_start":297,"line_end":297,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30388,"byte_end":30391,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::in_hash(vec![\"a\", \"c\", \"e\"]);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30392,"byte_end":30455,"line_start":299,"line_end":299,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"a\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30456,"byte_end":30501,"line_start":300,"line_end":300,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"b\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30502,"byte_end":30548,"line_start":301,"line_end":301,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"c\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30549,"byte_end":30594,"line_start":302,"line_end":302,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":30595,"byte_end":30602,"line_start":303,"line_end":303,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":198},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"name","qualname":"::name","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":1455},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":823},{"krate":0,"index":851},{"krate":0,"index":847},{"krate":0,"index":844},{"krate":0,"index":836},{"krate":0,"index":839},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":203},{"krate":0,"index":209},{"krate":0,"index":214},{"krate":0,"index":218},{"krate":0,"index":221}],"decl_id":null,"docs":" Name predicate expressions.\n","sig":null,"attributes":[{"value":"! Name predicate expressions.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":31195,"byte_end":31226,"line_start":9,"line_end":9,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":823},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":31488,"byte_end":31501,"line_start":21,"line_end":21,"column_start":12,"column_end":25},"name":"NamePredicate","qualname":"::name::NamePredicate","value":"NamePredicate {  }","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828}],"decl_id":null,"docs":" Augment an existing predicate with a name.","sig":null,"attributes":[{"value":"/ Augment an existing predicate with a name.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":31319,"byte_end":31365,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":31366,"byte_end":31369,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is created by the `PredicateNameExt::name` function.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":31370,"byte_end":31431,"line_start":19,"line_end":19,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":218},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32596,"byte_end":32612,"line_start":67,"line_end":67,"column_start":11,"column_end":27},"name":"PredicateNameExt","qualname":"::name::PredicateNameExt","value":"PredicateNameExt<Item: ?Sized>","parent":null,"children":[{"krate":0,"index":220}],"decl_id":null,"docs":" `Predicate` extension that adds naming predicate expressions.\n","sig":null,"attributes":[{"value":"/ `Predicate` extension that adds naming predicate expressions.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32520,"byte_end":32585,"line_start":66,"line_end":66,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32926,"byte_end":32930,"line_start":81,"line_end":81,"column_start":8,"column_end":12},"name":"name","qualname":"::name::PredicateNameExt::name","value":"pub fn name(Self, &'static str) -> NamePredicate<Self, Item> where Self: Sized","parent":{"krate":0,"index":218},"children":[],"decl_id":null,"docs":" Name a predicate expression.","sig":null,"attributes":[{"value":"/ Name a predicate expression.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32666,"byte_end":32698,"line_start":71,"line_end":71,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32703,"byte_end":32706,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32711,"byte_end":32725,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32730,"byte_end":32733,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32738,"byte_end":32745,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32750,"byte_end":32781,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32786,"byte_end":32789,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::is_empty().not().name(\"non-empty\");","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32794,"byte_end":32868,"line_start":78,"line_end":78,"column_start":5,"column_end":79}},{"value":"/ println!(\"{}\", predicate_fn);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32873,"byte_end":32906,"line_start":79,"line_end":79,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32911,"byte_end":32918,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":224},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ord","qualname":"::ord","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":855},{"krate":0,"index":869},{"krate":0,"index":868},{"krate":0,"index":866},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":229},{"krate":0,"index":871},{"krate":0,"index":891},{"krate":0,"index":888},{"krate":0,"index":886},{"krate":0,"index":880},{"krate":0,"index":882},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":231},{"krate":0,"index":236},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":247},{"krate":0,"index":249},{"krate":0,"index":894},{"krate":0,"index":912},{"krate":0,"index":911},{"krate":0,"index":909},{"krate":0,"index":906},{"krate":0,"index":907},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":251},{"krate":0,"index":914},{"krate":0,"index":934},{"krate":0,"index":931},{"krate":0,"index":929},{"krate":0,"index":923},{"krate":0,"index":925},{"krate":0,"index":918},{"krate":0,"index":920},{"krate":0,"index":253},{"krate":0,"index":258},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":275}],"decl_id":null,"docs":" Definition of `Predicate`s for comparisons over `Ord` and `Eq` types.\n","sig":null,"attributes":[{"value":"! Definition of `Predicate`s for comparisons over `Ord` and `Eq` types.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":33603,"byte_end":33676,"line_start":9,"line_end":9,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":871},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":34321,"byte_end":34332,"line_start":38,"line_end":38,"column_start":12,"column_end":23},"name":"EqPredicate","qualname":"::ord::EqPredicate","value":"EqPredicate {  }","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874}],"decl_id":null,"docs":" Predicate that returns `true` if `variable` matches the pre-defined `Eq`\n value, otherwise returns `false`.","sig":null,"attributes":[{"value":"/ Predicate that returns `true` if `variable` matches the pre-defined `Eq`","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":34086,"byte_end":34162,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ value, otherwise returns `false`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":34163,"byte_end":34200,"line_start":34,"line_end":34,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":34201,"byte_end":34204,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::{eq, ne}` functions.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":34205,"byte_end":34264,"line_start":36,"line_end":36,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":247},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36098,"byte_end":36100,"line_start":105,"line_end":105,"column_start":8,"column_end":10},"name":"eq","qualname":"::ord::eq","value":"pub fn eq<T>(T) -> EqPredicate<T> where T: fmt::Debug + PartialEq","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n equal to a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35614,"byte_end":35694,"line_start":89,"line_end":89,"column_start":1,"column_end":81}},{"value":"/ equal to a pre-defined value.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35695,"byte_end":35728,"line_start":90,"line_end":90,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35729,"byte_end":35732,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35733,"byte_end":35747,"line_start":92,"line_end":92,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35748,"byte_end":35751,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35752,"byte_end":35759,"line_start":94,"line_end":94,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35760,"byte_end":35791,"line_start":95,"line_end":95,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35792,"byte_end":35795,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::eq(5);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35796,"byte_end":35836,"line_start":97,"line_end":97,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(true, predicate_fn.eval(&5));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35837,"byte_end":35881,"line_start":98,"line_end":98,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(&10));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35882,"byte_end":35928,"line_start":99,"line_end":99,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35929,"byte_end":35932,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::eq(\"Hello\");","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35933,"byte_end":35979,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35980,"byte_end":36029,"line_start":102,"line_end":102,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Goodbye\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36030,"byte_end":36082,"line_start":103,"line_end":103,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36083,"byte_end":36090,"line_start":104,"line_end":104,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":249},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36581,"byte_end":36583,"line_start":127,"line_end":127,"column_start":8,"column_end":10},"name":"ne","qualname":"::ord::ne","value":"pub fn ne<T>(T) -> EqPredicate<T> where T: PartialEq + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n _not_ equal to a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36245,"byte_end":36325,"line_start":115,"line_end":115,"column_start":1,"column_end":81}},{"value":"/ _not_ equal to a pre-defined value.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36326,"byte_end":36365,"line_start":116,"line_end":116,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36366,"byte_end":36369,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36370,"byte_end":36384,"line_start":118,"line_end":118,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36385,"byte_end":36388,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36389,"byte_end":36396,"line_start":120,"line_end":120,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36397,"byte_end":36428,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36429,"byte_end":36432,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::ne(5);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36433,"byte_end":36473,"line_start":123,"line_end":123,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(false, predicate_fn.eval(&5));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36474,"byte_end":36519,"line_start":124,"line_end":124,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(true, predicate_fn.eval(&10));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36520,"byte_end":36565,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36566,"byte_end":36573,"line_start":126,"line_end":126,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":914},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":37456,"byte_end":37468,"line_start":162,"line_end":162,"column_start":12,"column_end":24},"name":"OrdPredicate","qualname":"::ord::OrdPredicate","value":"OrdPredicate {  }","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"decl_id":null,"docs":" Predicate that returns `true` if `variable` matches the pre-defined `Ord`\n value, otherwise returns `false`.","sig":null,"attributes":[{"value":"/ Predicate that returns `true` if `variable` matches the pre-defined `Ord`","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":37212,"byte_end":37289,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"/ value, otherwise returns `false`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":37290,"byte_end":37327,"line_start":158,"line_end":158,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":37328,"byte_end":37331,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::{gt, ge, lt, le}` functions.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":37332,"byte_end":37399,"line_start":160,"line_end":160,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":269},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39522,"byte_end":39524,"line_start":233,"line_end":233,"column_start":8,"column_end":10},"name":"lt","qualname":"::ord::lt","value":"pub fn lt<T>(T) -> OrdPredicate<T> where T: fmt::Debug + PartialOrd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n less than a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39052,"byte_end":39132,"line_start":217,"line_end":217,"column_start":1,"column_end":81}},{"value":"/ less than a pre-defined value.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39133,"byte_end":39167,"line_start":218,"line_end":218,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39168,"byte_end":39171,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39172,"byte_end":39186,"line_start":220,"line_end":220,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39187,"byte_end":39190,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39191,"byte_end":39198,"line_start":222,"line_end":222,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39199,"byte_end":39230,"line_start":223,"line_end":223,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39231,"byte_end":39234,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::lt(5);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39235,"byte_end":39275,"line_start":225,"line_end":225,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(true, predicate_fn.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39276,"byte_end":39320,"line_start":226,"line_end":226,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(&6));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39321,"byte_end":39366,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39367,"byte_end":39370,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::lt(\"b\");","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39371,"byte_end":39413,"line_start":229,"line_end":229,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"a\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39414,"byte_end":39459,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"c\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39460,"byte_end":39506,"line_start":231,"line_end":231,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39507,"byte_end":39514,"line_start":232,"line_end":232,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":271},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40063,"byte_end":40065,"line_start":256,"line_end":256,"column_start":8,"column_end":10},"name":"le","qualname":"::ord::le","value":"pub fn le<T>(T) -> OrdPredicate<T> where T: PartialOrd + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n less than or equal to a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39676,"byte_end":39756,"line_start":243,"line_end":243,"column_start":1,"column_end":81}},{"value":"/ less than or equal to a pre-defined value.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39757,"byte_end":39803,"line_start":244,"line_end":244,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39804,"byte_end":39807,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39808,"byte_end":39822,"line_start":246,"line_end":246,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39823,"byte_end":39826,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39827,"byte_end":39834,"line_start":248,"line_end":248,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39835,"byte_end":39866,"line_start":249,"line_end":249,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39867,"byte_end":39870,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::le(5);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39871,"byte_end":39911,"line_start":251,"line_end":251,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(true, predicate_fn.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39912,"byte_end":39956,"line_start":252,"line_end":252,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(true, predicate_fn.eval(&5));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":39957,"byte_end":40001,"line_start":253,"line_end":253,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(&6));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40002,"byte_end":40047,"line_start":254,"line_end":254,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40048,"byte_end":40055,"line_start":255,"line_end":255,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":273},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40602,"byte_end":40604,"line_start":279,"line_end":279,"column_start":8,"column_end":10},"name":"ge","qualname":"::ord::ge","value":"pub fn ge<T>(T) -> OrdPredicate<T> where T: PartialOrd + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n greater than or equal to a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40224,"byte_end":40304,"line_start":266,"line_end":266,"column_start":1,"column_end":81}},{"value":"/ greater than or equal to a pre-defined value.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40305,"byte_end":40354,"line_start":267,"line_end":267,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40355,"byte_end":40358,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40359,"byte_end":40373,"line_start":269,"line_end":269,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40374,"byte_end":40377,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40378,"byte_end":40385,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40386,"byte_end":40417,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40418,"byte_end":40421,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ let predicate = predicate::ge(5);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40422,"byte_end":40459,"line_start":274,"line_end":274,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(false, predicate.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40460,"byte_end":40502,"line_start":275,"line_end":275,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(true, predicate.eval(&5));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40503,"byte_end":40544,"line_start":276,"line_end":276,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(true, predicate.eval(&6));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40545,"byte_end":40586,"line_start":277,"line_end":277,"column_start":1,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40587,"byte_end":40594,"line_start":278,"line_end":278,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":275},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":41145,"byte_end":41147,"line_start":302,"line_end":302,"column_start":8,"column_end":10},"name":"gt","qualname":"::ord::gt","value":"pub fn gt<T>(T) -> OrdPredicate<T> where T: PartialOrd + fmt::Debug","parent":null,"children":[],"decl_id":null,"docs":" Creates a new predicate that will return `true` when the given `variable` is\n greater than a pre-defined value.","sig":null,"attributes":[{"value":"/ Creates a new predicate that will return `true` when the given `variable` is","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40766,"byte_end":40846,"line_start":289,"line_end":289,"column_start":1,"column_end":81}},{"value":"/ greater than a pre-defined value.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40847,"byte_end":40884,"line_start":290,"line_end":290,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40885,"byte_end":40888,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40889,"byte_end":40903,"line_start":292,"line_end":292,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40904,"byte_end":40907,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40908,"byte_end":40915,"line_start":294,"line_end":294,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40916,"byte_end":40947,"line_start":295,"line_end":295,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40948,"byte_end":40951,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::gt(5);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40952,"byte_end":40992,"line_start":297,"line_end":297,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(false, predicate_fn.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":40993,"byte_end":41038,"line_start":298,"line_end":298,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(false, predicate_fn.eval(&5));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":41039,"byte_end":41084,"line_start":299,"line_end":299,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(true, predicate_fn.eval(&6));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":41085,"byte_end":41129,"line_start":300,"line_end":300,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":41130,"byte_end":41137,"line_start":301,"line_end":301,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":277},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"boolean","qualname":"::boolean","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":1471},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":937},{"krate":0,"index":972},{"krate":0,"index":967},{"krate":0,"index":963},{"krate":0,"index":953},{"krate":0,"index":957},{"krate":0,"index":944},{"krate":0,"index":948},{"krate":0,"index":282},{"krate":0,"index":287},{"krate":0,"index":296},{"krate":0,"index":302},{"krate":0,"index":977},{"krate":0,"index":1012},{"krate":0,"index":1007},{"krate":0,"index":1003},{"krate":0,"index":993},{"krate":0,"index":997},{"krate":0,"index":984},{"krate":0,"index":988},{"krate":0,"index":307},{"krate":0,"index":312},{"krate":0,"index":321},{"krate":0,"index":327},{"krate":0,"index":1017},{"krate":0,"index":1044},{"krate":0,"index":1040},{"krate":0,"index":1037},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1022},{"krate":0,"index":1025},{"krate":0,"index":332},{"krate":0,"index":336},{"krate":0,"index":343},{"krate":0,"index":348},{"krate":0,"index":352},{"krate":0,"index":359}],"decl_id":null,"docs":" Definition of boolean logic combinators over `Predicate`s.\n","sig":null,"attributes":[{"value":"! Definition of boolean logic combinators over `Predicate`s.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":41665,"byte_end":41727,"line_start":9,"line_end":9,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":937},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":42014,"byte_end":42026,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"AndPredicate","qualname":"::boolean::AndPredicate","value":"AndPredicate {  }","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943}],"decl_id":null,"docs":" Predicate that combines two `Predicate`s, returning the AND of the results.","sig":null,"attributes":[{"value":"/ Predicate that combines two `Predicate`s, returning the AND of the results.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":41820,"byte_end":41899,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":41900,"byte_end":41903,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Predicate::and` function.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":41904,"byte_end":41957,"line_start":19,"line_end":19,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":42373,"byte_end":42376,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<AndPredicate<M1, M2, Item>>::new","value":"pub fn new(M1, M2) -> AndPredicate<M1, M2, Item>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `AndPredicate` over predicates `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Create a new `AndPredicate` over predicates `a` and `b`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":42301,"byte_end":42361,"line_start":38,"line_end":38,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":977},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":46012,"byte_end":46023,"line_start":177,"line_end":177,"column_start":12,"column_end":23},"name":"OrPredicate","qualname":"::boolean::OrPredicate","value":"OrPredicate {  }","parent":null,"children":[{"krate":0,"index":981},{"krate":0,"index":982},{"krate":0,"index":983}],"decl_id":null,"docs":" Predicate that combines two `Predicate`s, returning the OR of the results.","sig":null,"attributes":[{"value":"/ Predicate that combines two `Predicate`s, returning the OR of the results.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":45820,"byte_end":45898,"line_start":173,"line_end":173,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":45899,"byte_end":45902,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Predicate::or` function.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":45903,"byte_end":45955,"line_start":175,"line_end":175,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":46368,"byte_end":46371,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"new","qualname":"<OrPredicate<M1, M2, Item>>::new","value":"pub fn new(M1, M2) -> OrPredicate<M1, M2, Item>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OrPredicate` over predicates `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Create a new `OrPredicate` over predicates `a` and `b`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":46297,"byte_end":46356,"line_start":194,"line_end":194,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":49994,"byte_end":50006,"line_start":333,"line_end":333,"column_start":12,"column_end":24},"name":"NotPredicate","qualname":"::boolean::NotPredicate","value":"NotPredicate {  }","parent":null,"children":[{"krate":0,"index":1020},{"krate":0,"index":1021}],"decl_id":null,"docs":" Predicate that returns a `Predicate` taking the logical NOT of the result.","sig":null,"attributes":[{"value":"/ Predicate that returns a `Predicate` taking the logical NOT of the result.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":49801,"byte_end":49879,"line_start":329,"line_end":329,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":49880,"byte_end":49883,"line_start":330,"line_end":330,"column_start":1,"column_end":4}},{"value":"/ This is created by the `Predicate::not` function.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":49884,"byte_end":49937,"line_start":331,"line_end":331,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":50273,"byte_end":50276,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"new","qualname":"<NotPredicate<M, Item>>::new","value":"pub fn new(M) -> NotPredicate<M, Item>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `NotPredicate` over predicate `inner`.\n","sig":null,"attributes":[{"value":"/ Create a new `NotPredicate` over predicate `inner`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":50206,"byte_end":50261,"line_start":347,"line_end":347,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":352},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51462,"byte_end":51481,"line_start":394,"line_end":394,"column_start":11,"column_end":30},"name":"PredicateBooleanExt","qualname":"::boolean::PredicateBooleanExt","value":"PredicateBooleanExt<Item: ?Sized>","parent":null,"children":[{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":358}],"decl_id":null,"docs":" `Predicate` extension that adds boolean logic.\n","sig":null,"attributes":[{"value":"/ `Predicate` extension that adds boolean logic.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51401,"byte_end":51451,"line_start":393,"line_end":393,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51959,"byte_end":51962,"line_start":409,"line_end":409,"column_start":8,"column_end":11},"name":"and","qualname":"::boolean::PredicateBooleanExt::and","value":"pub fn and<B>(Self, B) -> AndPredicate<Self, B, Item> where\nB: Predicate<Item>, Self: Sized","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Compute the logical AND of two `Predicate` results, returning the result.","sig":null,"attributes":[{"value":"/ Compute the logical AND of two `Predicate` results, returning the result.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51535,"byte_end":51612,"line_start":398,"line_end":398,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51617,"byte_end":51620,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51625,"byte_end":51639,"line_start":400,"line_end":400,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51644,"byte_end":51647,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51652,"byte_end":51659,"line_start":402,"line_end":402,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51664,"byte_end":51695,"line_start":403,"line_end":403,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51700,"byte_end":51703,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn1 = predicate::always().and(predicate::always());","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51708,"byte_end":51777,"line_start":405,"line_end":405,"column_start":5,"column_end":74}},{"value":"/ let predicate_fn2 = predicate::always().and(predicate::never());","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51782,"byte_end":51850,"line_start":406,"line_end":406,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(true, predicate_fn1.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51855,"byte_end":51900,"line_start":407,"line_end":407,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(false, predicate_fn2.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51905,"byte_end":51951,"line_start":408,"line_end":408,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52670,"byte_end":52672,"line_start":430,"line_end":430,"column_start":8,"column_end":10},"name":"or","qualname":"::boolean::PredicateBooleanExt::or","value":"pub fn or<B>(Self, B) -> OrPredicate<Self, B, Item> where B: Predicate<Item>,\nSelf: Sized","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Compute the logical OR of two `Predicate` results, returning the result.","sig":null,"attributes":[{"value":"/ Compute the logical OR of two `Predicate` results, returning the result.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52128,"byte_end":52204,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52209,"byte_end":52212,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52217,"byte_end":52231,"line_start":419,"line_end":419,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52236,"byte_end":52239,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52244,"byte_end":52251,"line_start":421,"line_end":421,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52256,"byte_end":52287,"line_start":422,"line_end":422,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52292,"byte_end":52295,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn1 = predicate::always().or(predicate::always());","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52300,"byte_end":52368,"line_start":424,"line_end":424,"column_start":5,"column_end":73}},{"value":"/ let predicate_fn2 = predicate::always().or(predicate::never());","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52373,"byte_end":52440,"line_start":425,"line_end":425,"column_start":5,"column_end":72}},{"value":"/ let predicate_fn3 = predicate::never().or(predicate::never());","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52445,"byte_end":52511,"line_start":426,"line_end":426,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(true, predicate_fn1.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52516,"byte_end":52561,"line_start":427,"line_end":427,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(true, predicate_fn2.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52566,"byte_end":52611,"line_start":428,"line_end":428,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(false, predicate_fn3.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52616,"byte_end":52662,"line_start":429,"line_end":429,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":53212,"byte_end":53215,"line_start":449,"line_end":449,"column_start":8,"column_end":11},"name":"not","qualname":"::boolean::PredicateBooleanExt::not","value":"pub fn not(Self) -> NotPredicate<Self, Item> where Self: Sized","parent":{"krate":0,"index":352},"children":[],"decl_id":null,"docs":" Compute the logical NOT of a `Predicate`, returning the result.","sig":null,"attributes":[{"value":"/ Compute the logical NOT of a `Predicate`, returning the result.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52836,"byte_end":52903,"line_start":438,"line_end":438,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52908,"byte_end":52911,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52916,"byte_end":52930,"line_start":440,"line_end":440,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52935,"byte_end":52938,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52943,"byte_end":52950,"line_start":442,"line_end":442,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52955,"byte_end":52986,"line_start":443,"line_end":443,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52991,"byte_end":52994,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn1 = predicate::always().not();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":52999,"byte_end":53049,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/ let predicate_fn2 = predicate::never().not();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":53054,"byte_end":53103,"line_start":446,"line_end":446,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(false, predicate_fn1.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":53108,"byte_end":53154,"line_start":447,"line_end":447,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(true, predicate_fn2.eval(&4));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":53159,"byte_end":53204,"line_start":448,"line_end":448,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":362},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"float","qualname":"::float","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/mod.rs","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385}],"decl_id":null,"docs":" Float Predicates","sig":null,"attributes":[{"value":"! Float Predicates","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/mod.rs","byte_start":53791,"byte_end":53811,"line_start":9,"line_end":9,"column_start":1,"column_end":21}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/mod.rs","byte_start":53812,"byte_end":53815,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! This module contains predicates specific to string handling.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/mod.rs","byte_start":53816,"byte_end":53880,"line_start":11,"line_end":11,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":54695,"byte_end":54711,"line_start":22,"line_end":22,"column_start":12,"column_end":28},"name":"IsClosePredicate","qualname":"::float::close::IsClosePredicate","value":"IsClosePredicate {  }","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051}],"decl_id":null,"docs":" Predicate that ensures two numbers are \"close\" enough, understanding that rounding errors\n occur.","sig":null,"attributes":[{"value":"/ Predicate that ensures two numbers are \"close\" enough, understanding that rounding errors","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":54477,"byte_end":54570,"line_start":17,"line_end":17,"column_start":1,"column_end":94}},{"value":"/ occur.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":54571,"byte_end":54581,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":54582,"byte_end":54585,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::float::is_close`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":54586,"byte_end":54642,"line_start":20,"line_end":20,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55272,"byte_end":55280,"line_start":42,"line_end":42,"column_start":12,"column_end":20},"name":"distance","qualname":"<IsClosePredicate>::distance","value":"pub fn distance(Self, <f64 as Ulps>::U) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the amount of error allowed.","sig":null,"attributes":[{"value":"/ Set the amount of error allowed.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":54808,"byte_end":54844,"line_start":29,"line_end":29,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":54849,"byte_end":54852,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Values `1`-`5` should work in most cases.  Sometimes more control is needed and you will","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":54857,"byte_end":54949,"line_start":31,"line_end":31,"column_start":5,"column_end":97}},{"value":"/ need to set `IsClosePredicate::epsilon` separately from `IsClosePredicate::ulps`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":54954,"byte_end":55039,"line_start":32,"line_end":32,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55044,"byte_end":55047,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55052,"byte_end":55066,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55071,"byte_end":55074,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55079,"byte_end":55086,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55091,"byte_end":55122,"line_start":37,"line_end":37,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55127,"byte_end":55130,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let a = 0.15_f64 + 0.15_f64 + 0.15_f64;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55135,"byte_end":55178,"line_start":39,"line_end":39,"column_start":5,"column_end":48}},{"value":"/ let predicate_fn = predicate::float::is_close(a).distance(5);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55183,"byte_end":55248,"line_start":40,"line_end":40,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55253,"byte_end":55260,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55862,"byte_end":55869,"line_start":61,"line_end":61,"column_start":12,"column_end":19},"name":"epsilon","qualname":"<IsClosePredicate>::epsilon","value":"pub fn epsilon(Self, f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the absolute deviation allowed.","sig":null,"attributes":[{"value":"/ Set the absolute deviation allowed.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55447,"byte_end":55486,"line_start":48,"line_end":48,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55491,"byte_end":55494,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This is meant to handle problems near `0`. Values `1.`-`5.` epislons should work in most","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55499,"byte_end":55591,"line_start":50,"line_end":50,"column_start":5,"column_end":97}},{"value":"/ cases.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55596,"byte_end":55606,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55611,"byte_end":55614,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55619,"byte_end":55633,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55638,"byte_end":55641,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55646,"byte_end":55653,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55658,"byte_end":55689,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55694,"byte_end":55697,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let a = 0.15_f64 + 0.15_f64 + 0.15_f64;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55702,"byte_end":55745,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/ let predicate_fn = predicate::float::is_close(a).epsilon(5.0 * ::std::f64::EPSILON);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55750,"byte_end":55838,"line_start":59,"line_end":59,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55843,"byte_end":55850,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56325,"byte_end":56329,"line_start":78,"line_end":78,"column_start":12,"column_end":16},"name":"ulps","qualname":"<IsClosePredicate>::ulps","value":"pub fn ulps(Self, <f64 as Ulps>::U) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the relative deviation allowed.","sig":null,"attributes":[{"value":"/ Set the relative deviation allowed.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":55960,"byte_end":55999,"line_start":66,"line_end":66,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56004,"byte_end":56007,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This is meant to handle large numbers. Values `1`-`5` should work in most cases.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56012,"byte_end":56096,"line_start":68,"line_end":68,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56101,"byte_end":56104,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56109,"byte_end":56123,"line_start":70,"line_end":70,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56128,"byte_end":56131,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56136,"byte_end":56143,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56148,"byte_end":56179,"line_start":73,"line_end":73,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56184,"byte_end":56187,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ let a = 0.15_f64 + 0.15_f64 + 0.15_f64;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56192,"byte_end":56235,"line_start":75,"line_end":75,"column_start":5,"column_end":48}},{"value":"/ let predicate_fn = predicate::float::is_close(a).ulps(5);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56240,"byte_end":56301,"line_start":76,"line_end":76,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56306,"byte_end":56313,"line_start":77,"line_end":77,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":382},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58343,"byte_end":58351,"line_start":145,"line_end":145,"column_start":8,"column_end":16},"name":"is_close","qualname":"::float::close::is_close","value":"pub fn is_close(f64) -> IsClosePredicate","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Predicate` that ensures two numbers are \"close\" enough, understanding that\n rounding errors occur.","sig":null,"attributes":[{"value":"/ Create a new `Predicate` that ensures two numbers are \"close\" enough, understanding that","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":57898,"byte_end":57990,"line_start":131,"line_end":131,"column_start":1,"column_end":93}},{"value":"/ rounding errors occur.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":57991,"byte_end":58017,"line_start":132,"line_end":132,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58018,"byte_end":58021,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58022,"byte_end":58036,"line_start":134,"line_end":134,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58037,"byte_end":58040,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58041,"byte_end":58048,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58049,"byte_end":58080,"line_start":137,"line_end":137,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58081,"byte_end":58084,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ let a = 0.15_f64 + 0.15_f64 + 0.15_f64;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58085,"byte_end":58128,"line_start":139,"line_end":139,"column_start":1,"column_end":44}},{"value":"/ let b = 0.1_f64 + 0.1_f64 + 0.25_f64;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58129,"byte_end":58170,"line_start":140,"line_end":140,"column_start":1,"column_end":42}},{"value":"/ let predicate_fn = predicate::float::is_close(a);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58171,"byte_end":58224,"line_start":141,"line_end":141,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(true, predicate_fn.eval(&b));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58225,"byte_end":58269,"line_start":142,"line_end":142,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.distance(0).eval(&b));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58270,"byte_end":58327,"line_start":143,"line_end":143,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":58328,"byte_end":58335,"line_start":144,"line_end":144,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":386},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"path","qualname":"::path","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519}],"decl_id":null,"docs":" Path Predicates","sig":null,"attributes":[{"value":"! Path Predicates","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":58860,"byte_end":58879,"line_start":9,"line_end":9,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":58880,"byte_end":58883,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! This module contains predicates specific to the file system.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/mod.rs","byte_start":58884,"byte_end":58948,"line_start":11,"line_end":11,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":59907,"byte_end":59925,"line_start":20,"line_end":20,"column_start":12,"column_end":30},"name":"ExistencePredicate","qualname":"::path::existence::ExistencePredicate","value":"ExistencePredicate {  }","parent":null,"children":[{"krate":0,"index":1062}],"decl_id":null,"docs":" Predicate that checks if a file is present","sig":null,"attributes":[{"value":"/ Predicate that checks if a file is present","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":59715,"byte_end":59761,"line_start":16,"line_end":16,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":59762,"byte_end":59765,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::path::exists` and `predicate::path::missing`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":59766,"byte_end":59850,"line_start":18,"line_end":18,"column_start":1,"column_end":85}}]},{"kind":"Function","id":{"krate":0,"index":400},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60835,"byte_end":60841,"line_start":57,"line_end":57,"column_start":8,"column_end":14},"name":"exists","qualname":"::path::existence::exists","value":"pub fn exists() -> ExistencePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures the path exists.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures the path exists.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60552,"byte_end":60611,"line_start":46,"line_end":46,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60612,"byte_end":60615,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60616,"byte_end":60630,"line_start":48,"line_end":48,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60631,"byte_end":60634,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60635,"byte_end":60642,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60643,"byte_end":60667,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60668,"byte_end":60699,"line_start":52,"line_end":52,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60700,"byte_end":60703,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::path::exists();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60704,"byte_end":60753,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(true, predicate_fn.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60754,"byte_end":60819,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60820,"byte_end":60827,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":401},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":61213,"byte_end":61220,"line_start":72,"line_end":72,"column_start":8,"column_end":15},"name":"missing","qualname":"::path::existence::missing","value":"pub fn missing() -> ExistencePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures the path doesn't exist.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures the path doesn't exist.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60911,"byte_end":60977,"line_start":61,"line_end":61,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60978,"byte_end":60981,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60982,"byte_end":60996,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60997,"byte_end":61000,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":61001,"byte_end":61008,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":61009,"byte_end":61033,"line_start":66,"line_end":66,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":61034,"byte_end":61065,"line_start":67,"line_end":67,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":61066,"byte_end":61069,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::path::missing();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":61070,"byte_end":61120,"line_start":69,"line_end":69,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(true, predicate_fn.eval(Path::new(\"non-existent-file.foo\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":61121,"byte_end":61197,"line_start":70,"line_end":70,"column_start":1,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":61198,"byte_end":61205,"line_start":71,"line_end":71,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1093},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63030,"byte_end":63047,"line_start":65,"line_end":65,"column_start":12,"column_end":29},"name":"FileTypePredicate","qualname":"::path::ft::FileTypePredicate","value":"FileTypePredicate {  }","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095}],"decl_id":null,"docs":" Predicate that checks the `std::fs::FileType`.","sig":null,"attributes":[{"value":"/ Predicate that checks the `std::fs::FileType`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":62802,"byte_end":62852,"line_start":61,"line_end":61,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":62853,"byte_end":62856,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::path::is_file`, `predicate::path::is_dir`, and `predicate::path::is_symlink`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":62857,"byte_end":62973,"line_start":63,"line_end":63,"column_start":1,"column_end":117}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63299,"byte_end":63311,"line_start":76,"line_end":76,"column_start":12,"column_end":24},"name":"follow_links","qualname":"<FileTypePredicate>::follow_links","value":"pub fn follow_links(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Follow symbolic links.","sig":null,"attributes":[{"value":"/ Follow symbolic links.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63118,"byte_end":63144,"line_start":71,"line_end":71,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63149,"byte_end":63152,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ When yes is true, symbolic links are followed as if they were normal directories and files.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63157,"byte_end":63252,"line_start":73,"line_end":73,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63257,"byte_end":63260,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Default: disabled.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63265,"byte_end":63287,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63462,"byte_end":63471,"line_start":82,"line_end":82,"column_start":12,"column_end":21},"name":"from_path","qualname":"<FileTypePredicate>::from_path","value":"pub fn from_path(&path::Path) -> io::Result<FileTypePredicate>","parent":null,"children":[],"decl_id":null,"docs":" Allow to create an `FileTypePredicate` from a `path`\n","sig":null,"attributes":[{"value":"/ Allow to create an `FileTypePredicate` from a `path`","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63394,"byte_end":63450,"line_start":81,"line_end":81,"column_start":5,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":431},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65766,"byte_end":65773,"line_start":155,"line_end":155,"column_start":8,"column_end":15},"name":"is_file","qualname":"::path::ft::is_file","value":"pub fn is_file() -> FileTypePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures the path points to a file.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures the path points to a file.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65334,"byte_end":65403,"line_start":142,"line_end":142,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65404,"byte_end":65407,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65408,"byte_end":65422,"line_start":144,"line_end":144,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65423,"byte_end":65426,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65427,"byte_end":65434,"line_start":146,"line_end":146,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65435,"byte_end":65459,"line_start":147,"line_end":147,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65460,"byte_end":65491,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65492,"byte_end":65495,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::path::is_file();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65496,"byte_end":65546,"line_start":150,"line_end":150,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(true, predicate_fn.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65547,"byte_end":65612,"line_start":151,"line_end":151,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"src\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65613,"byte_end":65672,"line_start":152,"line_end":152,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"non-existent-file.foo\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65673,"byte_end":65750,"line_start":153,"line_end":153,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65751,"byte_end":65758,"line_start":154,"line_end":154,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":432},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66319,"byte_end":66325,"line_start":175,"line_end":175,"column_start":8,"column_end":14},"name":"is_dir","qualname":"::path::ft::is_dir","value":"pub fn is_dir() -> FileTypePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures the path points to a directory.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures the path points to a directory.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65883,"byte_end":65957,"line_start":162,"line_end":162,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65958,"byte_end":65961,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65962,"byte_end":65976,"line_start":164,"line_end":164,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65977,"byte_end":65980,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65981,"byte_end":65988,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65989,"byte_end":66013,"line_start":167,"line_end":167,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66014,"byte_end":66045,"line_start":168,"line_end":168,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66046,"byte_end":66049,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::path::is_dir();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66050,"byte_end":66099,"line_start":170,"line_end":170,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66100,"byte_end":66166,"line_start":171,"line_end":171,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(true, predicate_fn.eval(Path::new(\"src\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66167,"byte_end":66225,"line_start":172,"line_end":172,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"non-existent-file.foo\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66226,"byte_end":66303,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66304,"byte_end":66311,"line_start":174,"line_end":174,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":433},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66873,"byte_end":66883,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"is_symlink","qualname":"::path::ft::is_symlink","value":"pub fn is_symlink() -> FileTypePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures the path points to a symlink.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures the path points to a symlink.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66434,"byte_end":66506,"line_start":182,"line_end":182,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66507,"byte_end":66510,"line_start":183,"line_end":183,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66511,"byte_end":66525,"line_start":184,"line_end":184,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66526,"byte_end":66529,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66530,"byte_end":66537,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66538,"byte_end":66562,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66563,"byte_end":66594,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66595,"byte_end":66598,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::path::is_symlink();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66599,"byte_end":66652,"line_start":190,"line_end":190,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66653,"byte_end":66719,"line_start":191,"line_end":191,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"src\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66720,"byte_end":66779,"line_start":192,"line_end":192,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"non-existent-file.foo\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66780,"byte_end":66857,"line_start":193,"line_end":193,"column_start":1,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":66858,"byte_end":66865,"line_start":194,"line_end":194,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":67831,"byte_end":67851,"line_start":27,"line_end":27,"column_start":12,"column_end":32},"name":"FileContentPredicate","qualname":"::path::fc::FileContentPredicate","value":"FileContentPredicate {  }","parent":null,"children":[{"krate":0,"index":1110}],"decl_id":null,"docs":" Predicate adapter that converts a `path` predicate to a byte predicate on its content.","sig":null,"attributes":[{"value":"/ Predicate adapter that converts a `path` predicate to a byte predicate on its content.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":67637,"byte_end":67727,"line_start":23,"line_end":23,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":67728,"byte_end":67731,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is created by `pred.from_path()`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":67732,"byte_end":67774,"line_start":25,"line_end":25,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":465},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69494,"byte_end":69517,"line_start":92,"line_end":92,"column_start":11,"column_end":34},"name":"PredicateFileContentExt","qualname":"::path::fc::PredicateFileContentExt","value":"PredicateFileContentExt","parent":null,"children":[{"krate":0,"index":466}],"decl_id":null,"docs":" `Predicate` extension adapting a `slice` Predicate.\n","sig":null,"attributes":[{"value":"/ `Predicate` extension adapting a `slice` Predicate.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69428,"byte_end":69483,"line_start":91,"line_end":91,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":70048,"byte_end":70062,"line_start":109,"line_end":109,"column_start":8,"column_end":22},"name":"from_file_path","qualname":"::path::fc::PredicateFileContentExt::from_file_path","value":"pub fn from_file_path(Self) -> FileContentPredicate<Self>","parent":{"krate":0,"index":465},"children":[],"decl_id":null,"docs":" Returns a `FileContentPredicate` that adapts `Self` to a file content `Predicate`.","sig":null,"attributes":[{"value":"/ Returns a `FileContentPredicate` that adapts `Self` to a file content `Predicate`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69574,"byte_end":69660,"line_start":97,"line_end":97,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69665,"byte_end":69668,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69673,"byte_end":69687,"line_start":99,"line_end":99,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69692,"byte_end":69695,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69700,"byte_end":69707,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69712,"byte_end":69743,"line_start":102,"line_end":102,"column_start":5,"column_end":36}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69748,"byte_end":69772,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69777,"byte_end":69780,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::is_empty().not().from_utf8().from_file_path();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69785,"byte_end":69870,"line_start":105,"line_end":105,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(true, predicate_fn.eval(Path::new(\"./tests/hello_world\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69875,"byte_end":69949,"line_start":106,"line_end":106,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(false, predicate_fn.eval(Path::new(\"./tests/empty_file\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":69954,"byte_end":70028,"line_start":107,"line_end":107,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":70033,"byte_end":70040,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":70968,"byte_end":70987,"line_start":26,"line_end":26,"column_start":12,"column_end":31},"name":"BinaryFilePredicate","qualname":"::path::fs::BinaryFilePredicate","value":"BinaryFilePredicate {  }","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132}],"decl_id":null,"docs":" Predicate that compares file matches\n","sig":null,"attributes":[{"value":"/ Predicate that compares file matches","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":70877,"byte_end":70917,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71846,"byte_end":71850,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"utf8","qualname":"<BinaryFilePredicate>::utf8","value":"pub fn utf8(Self) -> Option<StrFilePredicate>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures complete equality","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures complete equality","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71241,"byte_end":71301,"line_start":37,"line_end":37,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71306,"byte_end":71309,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71314,"byte_end":71328,"line_start":39,"line_end":39,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71333,"byte_end":71336,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71341,"byte_end":71348,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71353,"byte_end":71377,"line_start":42,"line_end":42,"column_start":5,"column_end":29}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71382,"byte_end":71413,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71418,"byte_end":71421,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ let predicate_file = predicate::path::eq_file(Path::new(\"Cargo.toml\")).utf8().unwrap();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71426,"byte_end":71517,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(true, predicate_file.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71522,"byte_end":71589,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(false, predicate_file.eval(Path::new(\"Cargo.lock\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71594,"byte_end":71662,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(false, predicate_file.eval(Path::new(\"src\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71667,"byte_end":71728,"line_start":48,"line_end":48,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71733,"byte_end":71736,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(false, predicate_file.eval(\"Not a real Cargo.toml file content\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71741,"byte_end":71822,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71827,"byte_end":71834,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73583,"byte_end":73590,"line_start":109,"line_end":109,"column_start":8,"column_end":15},"name":"eq_file","qualname":"::path::fs::eq_file","value":"pub fn eq_file<P: Into<path::PathBuf>>(P) -> BinaryFilePredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures complete equality","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures complete equality","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73147,"byte_end":73207,"line_start":96,"line_end":96,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73208,"byte_end":73211,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73212,"byte_end":73226,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73227,"byte_end":73230,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73231,"byte_end":73238,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ use std::path::Path;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73239,"byte_end":73263,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73264,"byte_end":73295,"line_start":102,"line_end":102,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73296,"byte_end":73299,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let predicate_file = predicate::path::eq_file(Path::new(\"Cargo.toml\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73300,"byte_end":73375,"line_start":104,"line_end":104,"column_start":1,"column_end":76}},{"value":"/ assert_eq!(true, predicate_file.eval(Path::new(\"Cargo.toml\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73376,"byte_end":73443,"line_start":105,"line_end":105,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(false, predicate_file.eval(Path::new(\"src\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73444,"byte_end":73505,"line_start":106,"line_end":106,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(false, predicate_file.eval(Path::new(\"src\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73506,"byte_end":73567,"line_start":107,"line_end":107,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73568,"byte_end":73575,"line_start":108,"line_end":108,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73895,"byte_end":73911,"line_start":117,"line_end":117,"column_start":12,"column_end":28},"name":"StrFilePredicate","qualname":"::path::fs::StrFilePredicate","value":"StrFilePredicate {  }","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146}],"decl_id":null,"docs":" Predicate that compares string content of files\n","sig":null,"attributes":[{"value":"/ Predicate that compares string content of files","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73793,"byte_end":73844,"line_start":115,"line_end":115,"column_start":1,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":520},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"str","qualname":"::str","value":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699}],"decl_id":null,"docs":" String Predicates","sig":null,"attributes":[{"value":"! String Predicates","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":75639,"byte_end":75660,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":75661,"byte_end":75664,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! This module contains predicates specific to string handling.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/mod.rs","byte_start":75665,"byte_end":75729,"line_start":11,"line_end":11,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":76825,"byte_end":76841,"line_start":19,"line_end":19,"column_start":12,"column_end":28},"name":"IsEmptyPredicate","qualname":"::str::basics::IsEmptyPredicate","value":"IsEmptyPredicate {  }","parent":null,"children":[],"decl_id":null,"docs":" Predicate that checks for empty strings.","sig":null,"attributes":[{"value":"/ Predicate that checks for empty strings.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":76668,"byte_end":76712,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":76713,"byte_end":76716,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This is created by `predicates::str::is_empty`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":76717,"byte_end":76768,"line_start":17,"line_end":17,"column_start":1,"column_end":52}}]},{"kind":"Function","id":{"krate":0,"index":533},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77637,"byte_end":77645,"line_start":50,"line_end":50,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::str::basics::is_empty","value":"pub fn is_empty() -> IsEmptyPredicate","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures a str is empty","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures a str is empty","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77345,"byte_end":77402,"line_start":39,"line_end":39,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77403,"byte_end":77406,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77407,"byte_end":77421,"line_start":41,"line_end":41,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77422,"byte_end":77425,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77426,"byte_end":77433,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77434,"byte_end":77465,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77466,"byte_end":77469,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::is_empty();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77470,"byte_end":77520,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77521,"byte_end":77565,"line_start":47,"line_end":47,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Food World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77566,"byte_end":77621,"line_start":48,"line_end":48,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77622,"byte_end":77629,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77840,"byte_end":77859,"line_start":58,"line_end":58,"column_start":12,"column_end":31},"name":"StartsWithPredicate","qualname":"::str::basics::StartsWithPredicate","value":"StartsWithPredicate {  }","parent":null,"children":[{"krate":0,"index":1171}],"decl_id":null,"docs":" Predicate checks start of str","sig":null,"attributes":[{"value":"/ Predicate checks start of str","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77697,"byte_end":77730,"line_start":54,"line_end":54,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77731,"byte_end":77734,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This is created by `predicates::str::starts_with`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77735,"byte_end":77789,"line_start":56,"line_end":56,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":541},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78760,"byte_end":78771,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"starts_with","qualname":"::str::basics::starts_with","value":"pub fn starts_with<P>(P) -> StartsWithPredicate where P: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures a str starts with `pattern`","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures a str starts with `pattern`","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78431,"byte_end":78501,"line_start":80,"line_end":80,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78502,"byte_end":78505,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78506,"byte_end":78520,"line_start":82,"line_end":82,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78521,"byte_end":78524,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78525,"byte_end":78532,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78533,"byte_end":78564,"line_start":85,"line_end":85,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78565,"byte_end":78568,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::starts_with(\"Hello\");","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78569,"byte_end":78629,"line_start":87,"line_end":87,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78630,"byte_end":78685,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Goodbye World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78686,"byte_end":78744,"line_start":89,"line_end":89,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78745,"byte_end":78752,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79046,"byte_end":79063,"line_start":104,"line_end":104,"column_start":12,"column_end":29},"name":"EndsWithPredicate","qualname":"::str::basics::EndsWithPredicate","value":"EndsWithPredicate {  }","parent":null,"children":[{"krate":0,"index":1184}],"decl_id":null,"docs":" Predicate checks end of str","sig":null,"attributes":[{"value":"/ Predicate checks end of str","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78907,"byte_end":78938,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78939,"byte_end":78942,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ This is created by `predicates::str::ends_with`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78943,"byte_end":78995,"line_start":102,"line_end":102,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":550},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79947,"byte_end":79956,"line_start":137,"line_end":137,"column_start":8,"column_end":17},"name":"ends_with","qualname":"::str::basics::ends_with","value":"pub fn ends_with<P>(P) -> EndsWithPredicate where P: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures a str ends with `pattern`","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures a str ends with `pattern`","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79625,"byte_end":79693,"line_start":126,"line_end":126,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79694,"byte_end":79697,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79698,"byte_end":79712,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79713,"byte_end":79716,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79717,"byte_end":79724,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79725,"byte_end":79756,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79757,"byte_end":79760,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::ends_with(\"World\");","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79761,"byte_end":79819,"line_start":133,"line_end":133,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79820,"byte_end":79875,"line_start":134,"line_end":134,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Hello Moon\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79876,"byte_end":79931,"line_start":135,"line_end":135,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79932,"byte_end":79939,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80233,"byte_end":80250,"line_start":150,"line_end":150,"column_start":12,"column_end":29},"name":"ContainsPredicate","qualname":"::str::basics::ContainsPredicate","value":"ContainsPredicate {  }","parent":null,"children":[{"krate":0,"index":1197}],"decl_id":null,"docs":" Predicate that checks for patterns.","sig":null,"attributes":[{"value":"/ Predicate that checks for patterns.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80088,"byte_end":80127,"line_start":146,"line_end":146,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80128,"byte_end":80131,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ This is created by `predicates::str:contains`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80132,"byte_end":80182,"line_start":148,"line_end":148,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80663,"byte_end":80668,"line_start":166,"line_end":166,"column_start":12,"column_end":17},"name":"count","qualname":"<ContainsPredicate>::count","value":"pub fn count(Self, usize) -> MatchesPredicate","parent":null,"children":[],"decl_id":null,"docs":" Require a specific count of matches.","sig":null,"attributes":[{"value":"/ Require a specific count of matches.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80306,"byte_end":80346,"line_start":155,"line_end":155,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80351,"byte_end":80354,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80359,"byte_end":80373,"line_start":157,"line_end":157,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80378,"byte_end":80381,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80386,"byte_end":80393,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80398,"byte_end":80429,"line_start":160,"line_end":160,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80434,"byte_end":80437,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::contains(\"Two\").count(2);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80442,"byte_end":80506,"line_start":162,"line_end":162,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"One Two Three Two One\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80511,"byte_end":80576,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"One Two Three\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80581,"byte_end":80639,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80644,"byte_end":80651,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":81510,"byte_end":81526,"line_start":196,"line_end":196,"column_start":12,"column_end":28},"name":"MatchesPredicate","qualname":"::str::basics::MatchesPredicate","value":"MatchesPredicate {  }","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211}],"decl_id":null,"docs":" Predicate that checks for repeated patterns.","sig":null,"attributes":[{"value":"/ Predicate that checks for repeated patterns.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":81344,"byte_end":81392,"line_start":192,"line_end":192,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":81393,"byte_end":81396,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ This is created by `predicates::str::contains(...).count`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":81397,"byte_end":81459,"line_start":194,"line_end":194,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":570},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82972,"byte_end":82980,"line_start":244,"line_end":244,"column_start":8,"column_end":16},"name":"contains","qualname":"::str::basics::contains","value":"pub fn contains<P>(P) -> ContainsPredicate where P: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that ensures a str contains `pattern`","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that ensures a str contains `pattern`","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82649,"byte_end":82716,"line_start":233,"line_end":233,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82717,"byte_end":82720,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82721,"byte_end":82735,"line_start":235,"line_end":235,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82736,"byte_end":82739,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82740,"byte_end":82747,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82748,"byte_end":82779,"line_start":238,"line_end":238,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82780,"byte_end":82783,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::contains(\"Two\");","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82784,"byte_end":82839,"line_start":240,"line_end":240,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"One Two Three\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82840,"byte_end":82897,"line_start":241,"line_end":241,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Four Five Six\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82898,"byte_end":82956,"line_start":242,"line_end":242,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82957,"byte_end":82964,"line_start":243,"line_end":243,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1223},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":83812,"byte_end":83825,"line_start":22,"line_end":22,"column_start":12,"column_end":25},"name":"TrimPredicate","qualname":"::str::adapters::TrimPredicate","value":"TrimPredicate {  }","parent":null,"children":[{"krate":0,"index":1225}],"decl_id":null,"docs":" Predicate adaper that trims the variable being tested.","sig":null,"attributes":[{"value":"/ Predicate adaper that trims the variable being tested.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":83655,"byte_end":83713,"line_start":18,"line_end":18,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":83714,"byte_end":83717,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This is created by `pred.trim()`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":83718,"byte_end":83755,"line_start":20,"line_end":20,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":84846,"byte_end":84859,"line_start":65,"line_end":65,"column_start":12,"column_end":25},"name":"Utf8Predicate","qualname":"::str::adapters::Utf8Predicate","value":"Utf8Predicate {  }","parent":null,"children":[{"krate":0,"index":1247}],"decl_id":null,"docs":" Predicate adaper that converts a `str` predicate to byte predicate.","sig":null,"attributes":[{"value":"/ Predicate adaper that converts a `str` predicate to byte predicate.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":84671,"byte_end":84742,"line_start":61,"line_end":61,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":84743,"byte_end":84746,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ This is created by `pred.from_utf8()`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":84747,"byte_end":84789,"line_start":63,"line_end":63,"column_start":1,"column_end":43}}]},{"kind":"Trait","id":{"krate":0,"index":613},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87157,"byte_end":87172,"line_start":144,"line_end":144,"column_start":11,"column_end":26},"name":"PredicateStrExt","qualname":"::str::adapters::PredicateStrExt","value":"PredicateStrExt","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616}],"decl_id":null,"docs":" `Predicate` extension adapting a `str` Predicate.\n","sig":null,"attributes":[{"value":"/ `Predicate` extension adapting a `str` Predicate.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87093,"byte_end":87146,"line_start":143,"line_end":143,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87597,"byte_end":87601,"line_start":160,"line_end":160,"column_start":8,"column_end":12},"name":"trim","qualname":"::str::adapters::PredicateStrExt::trim","value":"pub fn trim(Self) -> TrimPredicate<Self>","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Returns a `TrimPredicate` that ensures the data passed to `Self` is trimmed.","sig":null,"attributes":[{"value":"/ Returns a `TrimPredicate` that ensures the data passed to `Self` is trimmed.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87228,"byte_end":87308,"line_start":149,"line_end":149,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87313,"byte_end":87316,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87321,"byte_end":87335,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87340,"byte_end":87343,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87348,"byte_end":87355,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87360,"byte_end":87391,"line_start":154,"line_end":154,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87396,"byte_end":87399,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::is_empty().trim();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87404,"byte_end":87461,"line_start":156,"line_end":156,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"    \"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87466,"byte_end":87514,"line_start":157,"line_end":157,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"    Hello    \"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87519,"byte_end":87577,"line_start":158,"line_end":158,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87582,"byte_end":87589,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88183,"byte_end":88192,"line_start":178,"line_end":178,"column_start":8,"column_end":17},"name":"from_utf8","qualname":"::str::adapters::PredicateStrExt::from_utf8","value":"pub fn from_utf8(Self) -> Utf8Predicate<Self>","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Returns a `Utf8Predicate` that adapts `Self` to a `[u8]` `Predicate`.","sig":null,"attributes":[{"value":"/ Returns a `Utf8Predicate` that adapts `Self` to a `[u8]` `Predicate`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87678,"byte_end":87751,"line_start":164,"line_end":164,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87756,"byte_end":87759,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87764,"byte_end":87778,"line_start":166,"line_end":166,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87783,"byte_end":87786,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87791,"byte_end":87798,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87803,"byte_end":87834,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/ use std::ffi::OsStr;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87839,"byte_end":87863,"line_start":170,"line_end":170,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87868,"byte_end":87871,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::is_empty().not().from_utf8();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87876,"byte_end":87944,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(true, predicate_fn.eval(OsStr::new(\"Hello\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":87949,"byte_end":88010,"line_start":173,"line_end":173,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(false, predicate_fn.eval(OsStr::new(\"\")));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88015,"byte_end":88072,"line_start":174,"line_end":174,"column_start":5,"column_end":62}},{"value":"/ let variable: &[u8] = b\"\";","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88077,"byte_end":88107,"line_start":175,"line_end":175,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(false, predicate_fn.eval(variable));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88112,"byte_end":88163,"line_start":176,"line_end":176,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88168,"byte_end":88175,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88873,"byte_end":88882,"line_start":198,"line_end":198,"column_start":8,"column_end":17},"name":"normalize","qualname":"::str::adapters::PredicateStrExt::normalize","value":"pub fn normalize(Self) -> NormalizedPredicate<Self>","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Returns a `NormalizedPredicate` that ensures\n  the newlines within the data passed to `Self` is normalised.","sig":null,"attributes":[{"value":"/ Returns a `NormalizedPredicate` that ensures","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88269,"byte_end":88317,"line_start":182,"line_end":182,"column_start":5,"column_end":53}},{"value":"/  the newlines within the data passed to `Self` is normalised.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88322,"byte_end":88387,"line_start":183,"line_end":183,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88392,"byte_end":88395,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88400,"byte_end":88414,"line_start":185,"line_end":185,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88419,"byte_end":88422,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88427,"byte_end":88434,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88439,"byte_end":88470,"line_start":188,"line_end":188,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88475,"byte_end":88478,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::eq(\"Hello World!\\n\").normalize();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88483,"byte_end":88550,"line_start":190,"line_end":190,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World!\\n\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88555,"byte_end":88613,"line_start":191,"line_end":191,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World!\\r\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88618,"byte_end":88676,"line_start":192,"line_end":192,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World!\\r\\n\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88681,"byte_end":88741,"line_start":193,"line_end":193,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Goodbye\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88746,"byte_end":88798,"line_start":194,"line_end":194,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88803,"byte_end":88810,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88815,"byte_end":88818,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"cfg(feature = \"normalize-line-endings\")","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88823,"byte_end":88865,"line_start":197,"line_end":197,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":89948,"byte_end":89967,"line_start":36,"line_end":36,"column_start":12,"column_end":31},"name":"DifferencePredicate","qualname":"::str::difference::DifferencePredicate","value":"DifferencePredicate {  }","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287}],"decl_id":null,"docs":" Predicate that diffs two strings.","sig":null,"attributes":[{"value":"/ Predicate that diffs two strings.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":89802,"byte_end":89839,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":89840,"byte_end":89843,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::str::similar`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":89844,"byte_end":89897,"line_start":34,"line_end":34,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90582,"byte_end":90587,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"split","qualname":"<DifferencePredicate>::split","value":"pub fn split<S>(Self, S) -> Self where S: Into<borrow::Cow>","parent":null,"children":[],"decl_id":null,"docs":" The split used when identifying changes.","sig":null,"attributes":[{"value":"/ The split used when identifying changes.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90118,"byte_end":90162,"line_start":44,"line_end":44,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90167,"byte_end":90170,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Common splits include:","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90175,"byte_end":90201,"line_start":46,"line_end":46,"column_start":5,"column_end":31}},{"value":"/ - `\"\"` for char-level.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90206,"byte_end":90232,"line_start":47,"line_end":47,"column_start":5,"column_end":31}},{"value":"/ - `\" \"` for word-level.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90237,"byte_end":90264,"line_start":48,"line_end":48,"column_start":5,"column_end":32}},{"value":"/ - `\"\\n\"` for line-level.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90269,"byte_end":90297,"line_start":49,"line_end":49,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90302,"byte_end":90305,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ Default: `\"\\n\"`","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90310,"byte_end":90329,"line_start":51,"line_end":51,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90334,"byte_end":90337,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90342,"byte_end":90356,"line_start":53,"line_end":53,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90361,"byte_end":90364,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90369,"byte_end":90376,"line_start":55,"line_end":55,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90381,"byte_end":90412,"line_start":56,"line_end":56,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90417,"byte_end":90420,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::similar(\"Hello World\").split(\" \");","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90425,"byte_end":90498,"line_start":58,"line_end":58,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90503,"byte_end":90558,"line_start":59,"line_end":59,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90563,"byte_end":90570,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":631},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":91193,"byte_end":91201,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"distance","qualname":"<DifferencePredicate>::distance","value":"pub fn distance(Self, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The maximum allowed edit distance.","sig":null,"attributes":[{"value":"/ The maximum allowed edit distance.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90738,"byte_end":90776,"line_start":69,"line_end":69,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90781,"byte_end":90784,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Default: `0`","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90789,"byte_end":90805,"line_start":71,"line_end":71,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90810,"byte_end":90813,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90818,"byte_end":90832,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90837,"byte_end":90840,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90845,"byte_end":90852,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90857,"byte_end":90888,"line_start":76,"line_end":76,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90893,"byte_end":90896,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::similar(\"Hello World!\").split(\"\").distance(1);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90901,"byte_end":90986,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World!\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90991,"byte_end":91047,"line_start":79,"line_end":79,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":91052,"byte_end":91107,"line_start":80,"line_end":80,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Hello World?\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":91112,"byte_end":91169,"line_start":81,"line_end":81,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":91174,"byte_end":91181,"line_start":82,"line_end":82,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":641},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93028,"byte_end":93032,"line_start":137,"line_end":137,"column_start":8,"column_end":12},"name":"diff","qualname":"::str::difference::diff","value":"pub fn diff<S>(S) -> DifferencePredicate where S: Into<borrow::Cow>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that diffs two strings.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that diffs two strings.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92717,"byte_end":92770,"line_start":126,"line_end":126,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92771,"byte_end":92774,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92775,"byte_end":92789,"line_start":128,"line_end":128,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92790,"byte_end":92793,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92794,"byte_end":92801,"line_start":130,"line_end":130,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92802,"byte_end":92833,"line_start":131,"line_end":131,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92834,"byte_end":92837,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::diff(\"Hello World\");","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92838,"byte_end":92897,"line_start":133,"line_end":133,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Hello World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92898,"byte_end":92954,"line_start":134,"line_end":134,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Goodbye World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92955,"byte_end":93012,"line_start":135,"line_end":135,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93013,"byte_end":93020,"line_start":136,"line_end":136,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":643},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93598,"byte_end":93605,"line_start":160,"line_end":160,"column_start":8,"column_end":15},"name":"similar","qualname":"::str::difference::similar","value":"pub fn similar<S>(S) -> DifferencePredicate where S: Into<borrow::Cow>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that checks strings for how similar they are.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that checks strings for how similar they are.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93262,"byte_end":93337,"line_start":149,"line_end":149,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93338,"byte_end":93341,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93342,"byte_end":93356,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93357,"byte_end":93360,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93361,"byte_end":93368,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93369,"byte_end":93400,"line_start":154,"line_end":154,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93401,"byte_end":93404,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::similar(\"Hello World\");","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93405,"byte_end":93467,"line_start":156,"line_end":156,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93468,"byte_end":93523,"line_start":157,"line_end":157,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Goodbye World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93524,"byte_end":93582,"line_start":158,"line_end":158,"column_start":1,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":93583,"byte_end":93590,"line_start":159,"line_end":159,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1299},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/normalize.rs","byte_start":94520,"byte_end":94539,"line_start":20,"line_end":20,"column_start":12,"column_end":31},"name":"NormalizedPredicate","qualname":"::str::normalize::NormalizedPredicate","value":"NormalizedPredicate {  }","parent":null,"children":[{"krate":0,"index":1301}],"decl_id":null,"docs":" Predicate adapter that normalizes the newlines contained in the variable being tested.","sig":null,"attributes":[{"value":"/ Predicate adapter that normalizes the newlines contained in the variable being tested.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/normalize.rs","byte_start":94371,"byte_end":94461,"line_start":17,"line_end":17,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/normalize.rs","byte_start":94462,"byte_end":94465,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This is created by `pred.normalize()`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/normalize.rs","byte_start":94466,"byte_end":94508,"line_start":19,"line_end":19,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":674},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96067,"byte_end":96077,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"name":"RegexError","qualname":"::str::regex::RegexError","value":"regex::Error","parent":null,"children":[],"decl_id":null,"docs":" An error that occurred during parsing or compiling a regular expression.\n","sig":null,"attributes":[{"value":"/ An error that occurred during parsing or compiling a regular expression.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":95981,"byte_end":96057,"line_start":17,"line_end":17,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96228,"byte_end":96242,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"RegexPredicate","qualname":"::str::regex::RegexPredicate","value":"RegexPredicate {  }","parent":null,"children":[{"krate":0,"index":1322}],"decl_id":null,"docs":" Predicate that uses regex matching","sig":null,"attributes":[{"value":"/ Predicate that uses regex matching","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96095,"byte_end":96133,"line_start":20,"line_end":20,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96134,"byte_end":96137,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This is created by the `predicate::str::is_match`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96138,"byte_end":96192,"line_start":22,"line_end":22,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96666,"byte_end":96671,"line_start":40,"line_end":40,"column_start":12,"column_end":17},"name":"count","qualname":"<RegexPredicate>::count","value":"pub fn count(Self, usize) -> RegexMatchesPredicate","parent":null,"children":[],"decl_id":null,"docs":" Require a specific count of matches.","sig":null,"attributes":[{"value":"/ Require a specific count of matches.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96296,"byte_end":96336,"line_start":29,"line_end":29,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96341,"byte_end":96344,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96349,"byte_end":96363,"line_start":31,"line_end":31,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96368,"byte_end":96371,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96376,"byte_end":96383,"line_start":33,"line_end":33,"column_start":5,"column_end":12}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96388,"byte_end":96419,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96424,"byte_end":96427,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let predicate_fn = predicate::str::is_match(\"T[a-z]*\").unwrap().count(3);","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96432,"byte_end":96509,"line_start":36,"line_end":36,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"One Two Three Two One\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96514,"byte_end":96579,"line_start":37,"line_end":37,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"One Two Three\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96584,"byte_end":96642,"line_start":38,"line_end":38,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96647,"byte_end":96654,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":97443,"byte_end":97464,"line_start":67,"line_end":67,"column_start":12,"column_end":33},"name":"RegexMatchesPredicate","qualname":"::str::regex::RegexMatchesPredicate","value":"RegexMatchesPredicate {  }","parent":null,"children":[{"krate":0,"index":1328},{"krate":0,"index":1329}],"decl_id":null,"docs":" Predicate that checks for repeated patterns.","sig":null,"attributes":[{"value":"/ Predicate that checks for repeated patterns.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":97292,"byte_end":97340,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":97341,"byte_end":97344,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ This is created by `predicates::str::is_match(...).count`.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":97345,"byte_end":97407,"line_start":65,"line_end":65,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":693},"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98937,"byte_end":98945,"line_start":115,"line_end":115,"column_start":8,"column_end":16},"name":"is_match","qualname":"::str::regex::is_match","value":"pub fn is_match<S>(S) -> Result<RegexPredicate, RegexError> where\nS: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Predicate` that uses a regular expression to match the string.","sig":null,"attributes":[{"value":"/ Creates a new `Predicate` that uses a regular expression to match the string.","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98590,"byte_end":98671,"line_start":104,"line_end":104,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98672,"byte_end":98675,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98676,"byte_end":98690,"line_start":106,"line_end":106,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98691,"byte_end":98694,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98695,"byte_end":98702,"line_start":108,"line_end":108,"column_start":1,"column_end":8}},{"value":"/ use predicates::prelude::*;","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98703,"byte_end":98734,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98735,"byte_end":98738,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ let predicate_fn = predicate::str::is_match(\"^Hel.o.*$\").unwrap();","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98739,"byte_end":98809,"line_start":111,"line_end":111,"column_start":1,"column_end":71}},{"value":"/ assert_eq!(true, predicate_fn.eval(\"Hello World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98810,"byte_end":98865,"line_start":112,"line_end":112,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(false, predicate_fn.eval(\"Food World\"));","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98866,"byte_end":98921,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98922,"byte_end":98929,"line_start":114,"line_end":114,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":12586,"byte_end":12598,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":12951,"byte_end":12963,"line_start":36,"line_end":36,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":13163,"byte_end":13175,"line_start":45,"line_end":45,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":13488,"byte_end":13500,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":13668,"byte_end":13680,"line_start":67,"line_end":67,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":15174,"byte_end":15175,"line_start":117,"line_end":117,"column_start":41,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16003,"byte_end":16019,"line_start":25,"line_end":25,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16303,"byte_end":16319,"line_start":35,"line_end":35,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16562,"byte_end":16578,"line_start":42,"line_end":42,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18595,"byte_end":18606,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19212,"byte_end":19223,"line_start":58,"line_end":58,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19570,"byte_end":19581,"line_start":72,"line_end":72,"column_start":48,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19665,"byte_end":19676,"line_start":79,"line_end":79,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22232,"byte_end":22243,"line_start":37,"line_end":37,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":23502,"byte_end":23513,"line_start":73,"line_end":73,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":23842,"byte_end":23853,"line_start":86,"line_end":86,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":24211,"byte_end":24222,"line_start":99,"line_end":99,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":24508,"byte_end":24519,"line_start":109,"line_end":109,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26675,"byte_end":26689,"line_start":174,"line_end":174,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":27025,"byte_end":27039,"line_start":187,"line_end":187,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":27404,"byte_end":27418,"line_start":200,"line_end":200,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":27698,"byte_end":27712,"line_start":210,"line_end":210,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":28512,"byte_end":28531,"line_start":236,"line_end":236,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":28860,"byte_end":28879,"line_start":249,"line_end":249,"column_start":30,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":29237,"byte_end":29256,"line_start":262,"line_end":262,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":29542,"byte_end":29561,"line_start":272,"line_end":272,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":31669,"byte_end":31682,"line_start":31,"line_end":31,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32027,"byte_end":32040,"line_start":45,"line_end":45,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32340,"byte_end":32353,"line_start":56,"line_end":56,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":33185,"byte_end":33186,"line_start":93,"line_end":93,"column_start":42,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":33865,"byte_end":33870,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":34435,"byte_end":34446,"line_start":46,"line_end":46,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":233},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":34882,"byte_end":34893,"line_start":62,"line_end":62,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35355,"byte_end":35366,"line_start":78,"line_end":78,"column_start":45,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35431,"byte_end":35442,"line_start":80,"line_end":80,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36891,"byte_end":36897,"line_start":145,"line_end":145,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":252}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":37573,"byte_end":37585,"line_start":170,"line_end":170,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":38169,"byte_end":38181,"line_start":188,"line_end":188,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":38789,"byte_end":38801,"line_start":206,"line_end":206,"column_start":45,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":38867,"byte_end":38879,"line_start":208,"line_end":208,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":42194,"byte_end":42206,"line_start":32,"line_end":32,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":42569,"byte_end":42581,"line_start":48,"line_end":48,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":43651,"byte_end":43663,"line_start":78,"line_end":78,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":44069,"byte_end":44081,"line_start":93,"line_end":93,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":46191,"byte_end":46202,"line_start":188,"line_end":188,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":46562,"byte_end":46573,"line_start":204,"line_end":204,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":47643,"byte_end":47654,"line_start":234,"line_end":234,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":48060,"byte_end":48071,"line_start":249,"line_end":249,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":331}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":50130,"byte_end":50142,"line_start":342,"line_end":342,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":50444,"byte_end":50456,"line_start":356,"line_end":356,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":50903,"byte_end":50915,"line_start":372,"line_end":372,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51217,"byte_end":51229,"line_start":383,"line_end":383,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":53372,"byte_end":53373,"line_start":457,"line_end":457,"column_start":45,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":54785,"byte_end":54801,"line_start":28,"line_end":28,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56446,"byte_end":56462,"line_start":84,"line_end":84,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":57418,"byte_end":57434,"line_start":115,"line_end":115,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":57763,"byte_end":57779,"line_start":125,"line_end":125,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":59980,"byte_end":59998,"line_start":24,"line_end":24,"column_start":32,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60337,"byte_end":60355,"line_start":38,"line_end":38,"column_start":42,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60382,"byte_end":60400,"line_start":40,"line_end":40,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":61858,"byte_end":61866,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":62533,"byte_end":62541,"line_start":50,"line_end":50,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63094,"byte_end":63111,"line_start":70,"line_end":70,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63684,"byte_end":63701,"line_start":90,"line_end":90,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":64941,"byte_end":64958,"line_start":129,"line_end":129,"column_start":42,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65202,"byte_end":65219,"line_start":136,"line_end":136,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":67908,"byte_end":67928,"line_start":34,"line_end":34,"column_start":9,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":68149,"byte_end":68169,"line_start":44,"line_end":44,"column_start":45,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":68437,"byte_end":68457,"line_start":54,"line_end":54,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":68631,"byte_end":68651,"line_start":63,"line_end":63,"column_start":35,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":70187,"byte_end":70188,"line_start":114,"line_end":114,"column_start":37,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71066,"byte_end":71085,"line_start":31,"line_end":31,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":72073,"byte_end":72092,"line_start":59,"line_end":59,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":72419,"byte_end":72438,"line_start":73,"line_end":73,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":72736,"byte_end":72755,"line_start":83,"line_end":83,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73001,"byte_end":73020,"line_start":90,"line_end":90,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73968,"byte_end":73984,"line_start":122,"line_end":122,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":74222,"byte_end":74238,"line_start":130,"line_end":130,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":504},{"krate":0,"index":505}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":74564,"byte_end":74580,"line_start":144,"line_end":144,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":508},{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":74870,"byte_end":74886,"line_start":154,"line_end":154,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":75132,"byte_end":75148,"line_start":161,"line_end":161,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":76870,"byte_end":76886,"line_start":21,"line_end":21,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77175,"byte_end":77191,"line_start":31,"line_end":31,"column_start":42,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77218,"byte_end":77234,"line_start":33,"line_end":33,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77910,"byte_end":77929,"line_start":62,"line_end":62,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78234,"byte_end":78253,"line_start":72,"line_end":72,"column_start":42,"column_end":61},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78280,"byte_end":78299,"line_start":74,"line_end":74,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79114,"byte_end":79131,"line_start":108,"line_end":108,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79434,"byte_end":79451,"line_start":118,"line_end":118,"column_start":42,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79478,"byte_end":79495,"line_start":120,"line_end":120,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80282,"byte_end":80299,"line_start":154,"line_end":154,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80835,"byte_end":80852,"line_start":174,"line_end":174,"column_start":25,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":81154,"byte_end":81171,"line_start":184,"line_end":184,"column_start":42,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":81198,"byte_end":81215,"line_start":186,"line_end":186,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":81595,"byte_end":81611,"line_start":201,"line_end":201,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82248,"byte_end":82264,"line_start":220,"line_end":220,"column_start":42,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":566}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82506,"byte_end":82522,"line_start":227,"line_end":227,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":83900,"byte_end":83913,"line_start":29,"line_end":29,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":84239,"byte_end":84252,"line_start":42,"line_end":42,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":587}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":84519,"byte_end":84532,"line_start":52,"line_end":52,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":84941,"byte_end":84954,"line_start":72,"line_end":72,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":596}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":85802,"byte_end":85815,"line_start":99,"line_end":99,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":86661,"byte_end":86674,"line_start":124,"line_end":124,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":86941,"byte_end":86954,"line_start":134,"line_end":134,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88997,"byte_end":88998,"line_start":203,"line_end":203,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":89585,"byte_end":89595,"line_start":23,"line_end":23,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90092,"byte_end":90111,"line_start":43,"line_end":43,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":631}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":91317,"byte_end":91336,"line_start":89,"line_end":89,"column_start":25,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92155,"byte_end":92174,"line_start":110,"line_end":110,"column_start":42,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":637}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92418,"byte_end":92437,"line_start":117,"line_end":117,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/normalize.rs","byte_start":94642,"byte_end":94661,"line_start":27,"line_end":27,"column_start":45,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":657}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/normalize.rs","byte_start":94930,"byte_end":94949,"line_start":37,"line_end":37,"column_start":28,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/normalize.rs","byte_start":95368,"byte_end":95387,"line_start":52,"line_end":52,"column_start":26,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96275,"byte_end":96289,"line_start":28,"line_end":28,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96805,"byte_end":96819,"line_start":45,"line_end":45,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":97115,"byte_end":97129,"line_start":55,"line_end":55,"column_start":42,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":97156,"byte_end":97170,"line_start":57,"line_end":57,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":683}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":97534,"byte_end":97555,"line_start":72,"line_end":72,"column_start":25,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98184,"byte_end":98205,"line_start":91,"line_end":91,"column_start":42,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98447,"byte_end":98468,"line_start":98,"line_end":98,"column_start":23,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/utils.rs","byte_start":99655,"byte_end":99667,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":706}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/utils.rs","byte_start":99790,"byte_end":99802,"line_start":31,"line_end":31,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/utils.rs","byte_start":99967,"byte_end":99979,"line_start":40,"line_end":40,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9719,"byte_end":9726,"line_start":206,"line_end":206,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9821,"byte_end":9829,"line_start":213,"line_end":213,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":84}},{"kind":"Mod","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9839,"byte_end":9847,"line_start":214,"line_end":214,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":101}},{"kind":"Mod","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9857,"byte_end":9861,"line_start":215,"line_end":215,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":127}},{"kind":"Mod","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9871,"byte_end":9875,"line_start":216,"line_end":216,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":198}},{"kind":"Mod","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9885,"byte_end":9888,"line_start":217,"line_end":217,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":224}},{"kind":"Mod","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9914,"byte_end":9921,"line_start":220,"line_end":220,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":277}},{"kind":"Mod","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9975,"byte_end":9980,"line_start":223,"line_end":223,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":362}},{"kind":"Mod","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":9990,"byte_end":9994,"line_start":224,"line_end":224,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":386}},{"kind":"Mod","span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/lib.rs","byte_start":10004,"byte_end":10007,"line_start":225,"line_end":225,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":520}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":12586,"byte_end":12598,"line_start":22,"line_end":22,"column_start":12,"column_end":24},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":12951,"byte_end":12963,"line_start":36,"line_end":36,"column_start":27,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":52},"to":{"krate":2,"index":6203}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":13163,"byte_end":13175,"line_start":45,"line_end":45,"column_start":48,"column_end":60},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":52},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":13488,"byte_end":13500,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":52},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":13668,"byte_end":13680,"line_start":67,"line_end":67,"column_start":32,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":52},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boxed.rs","byte_start":15174,"byte_end":15175,"line_start":117,"line_end":117,"column_start":41,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":81},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16003,"byte_end":16019,"line_start":25,"line_end":25,"column_start":40,"column_end":56},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":717},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16303,"byte_end":16319,"line_start":35,"line_end":35,"column_start":42,"column_end":58},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":717},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/constant.rs","byte_start":16562,"byte_end":16578,"line_start":42,"line_end":42,"column_start":23,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":717},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":18595,"byte_end":18606,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19212,"byte_end":19223,"line_start":58,"line_end":58,"column_start":29,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":731},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19570,"byte_end":19581,"line_start":72,"line_end":72,"column_start":48,"column_end":59},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":731},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/function.rs","byte_start":19665,"byte_end":19676,"line_start":79,"line_end":79,"column_start":29,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":22232,"byte_end":22243,"line_start":37,"line_end":37,"column_start":9,"column_end":20},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":763},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":23502,"byte_end":23513,"line_start":73,"line_end":73,"column_start":26,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":763},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":23842,"byte_end":23853,"line_start":86,"line_end":86,"column_start":30,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":763},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":24211,"byte_end":24222,"line_start":99,"line_end":99,"column_start":45,"column_end":56},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":763},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":24508,"byte_end":24519,"line_start":109,"line_end":109,"column_start":26,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":763},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":26675,"byte_end":26689,"line_start":174,"line_end":174,"column_start":26,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":783},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":27025,"byte_end":27039,"line_start":187,"line_end":187,"column_start":30,"column_end":44},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":783},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":27404,"byte_end":27418,"line_start":200,"line_end":200,"column_start":45,"column_end":59},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":783},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":27698,"byte_end":27712,"line_start":210,"line_end":210,"column_start":26,"column_end":40},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":783},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":28512,"byte_end":28531,"line_start":236,"line_end":236,"column_start":26,"column_end":45},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":803},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":28860,"byte_end":28879,"line_start":249,"line_end":249,"column_start":30,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":803},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":29237,"byte_end":29256,"line_start":262,"line_end":262,"column_start":45,"column_end":64},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":803},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/iter.rs","byte_start":29542,"byte_end":29561,"line_start":272,"line_end":272,"column_start":26,"column_end":45},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":803},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":31669,"byte_end":31682,"line_start":31,"line_end":31,"column_start":35,"column_end":48},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":823},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32027,"byte_end":32040,"line_start":45,"line_end":45,"column_start":51,"column_end":64},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":823},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":32340,"byte_end":32353,"line_start":56,"line_end":56,"column_start":32,"column_end":45},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":823},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/name.rs","byte_start":33185,"byte_end":33186,"line_start":93,"line_end":93,"column_start":42,"column_end":43},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":222},"to":{"krate":0,"index":218}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":33865,"byte_end":33870,"line_start":23,"line_end":23,"column_start":23,"column_end":28},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":855},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":34435,"byte_end":34446,"line_start":46,"line_end":46,"column_start":26,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":871},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":34882,"byte_end":34893,"line_start":62,"line_end":62,"column_start":30,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":871},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35355,"byte_end":35366,"line_start":78,"line_end":78,"column_start":45,"column_end":56},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":871},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":35431,"byte_end":35442,"line_start":80,"line_end":80,"column_start":26,"column_end":37},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":871},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":36891,"byte_end":36897,"line_start":145,"line_end":145,"column_start":23,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":894},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":37573,"byte_end":37585,"line_start":170,"line_end":170,"column_start":26,"column_end":38},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":914},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":38169,"byte_end":38181,"line_start":188,"line_end":188,"column_start":30,"column_end":42},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":914},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":38789,"byte_end":38801,"line_start":206,"line_end":206,"column_start":45,"column_end":57},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":914},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/ord.rs","byte_start":38867,"byte_end":38879,"line_start":208,"line_end":208,"column_start":26,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":914},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":42194,"byte_end":42206,"line_start":32,"line_end":32,"column_start":20,"column_end":32},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":937},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":42569,"byte_end":42581,"line_start":48,"line_end":48,"column_start":40,"column_end":52},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":937},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":43651,"byte_end":43663,"line_start":78,"line_end":78,"column_start":56,"column_end":68},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":937},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":44069,"byte_end":44081,"line_start":93,"line_end":93,"column_start":37,"column_end":49},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":937},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":46191,"byte_end":46202,"line_start":188,"line_end":188,"column_start":20,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":46562,"byte_end":46573,"line_start":204,"line_end":204,"column_start":40,"column_end":51},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":977},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":47643,"byte_end":47654,"line_start":234,"line_end":234,"column_start":56,"column_end":67},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":977},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":48060,"byte_end":48071,"line_start":249,"line_end":249,"column_start":37,"column_end":48},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":977},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":50130,"byte_end":50142,"line_start":342,"line_end":342,"column_start":15,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":50444,"byte_end":50456,"line_start":356,"line_end":356,"column_start":35,"column_end":47},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1017},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":50903,"byte_end":50915,"line_start":372,"line_end":372,"column_start":51,"column_end":63},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1017},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":51217,"byte_end":51229,"line_start":383,"line_end":383,"column_start":32,"column_end":44},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1017},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/boolean.rs","byte_start":53372,"byte_end":53373,"line_start":457,"line_end":457,"column_start":45,"column_end":46},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":360},"to":{"krate":0,"index":352}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":54785,"byte_end":54801,"line_start":28,"line_end":28,"column_start":6,"column_end":22},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":56446,"byte_end":56462,"line_start":84,"line_end":84,"column_start":25,"column_end":41},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1048},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":57418,"byte_end":57434,"line_start":115,"line_end":115,"column_start":42,"column_end":58},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1048},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/float/close.rs","byte_start":57763,"byte_end":57779,"line_start":125,"line_end":125,"column_start":23,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1048},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":59980,"byte_end":59998,"line_start":24,"line_end":24,"column_start":32,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1061},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60337,"byte_end":60355,"line_start":38,"line_end":38,"column_start":42,"column_end":60},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1061},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/existence.rs","byte_start":60382,"byte_end":60400,"line_start":40,"line_end":40,"column_start":23,"column_end":41},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1061},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":61858,"byte_end":61866,"line_start":24,"line_end":24,"column_start":6,"column_end":14},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":62533,"byte_end":62541,"line_start":50,"line_end":50,"column_start":23,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1075},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63094,"byte_end":63111,"line_start":70,"line_end":70,"column_start":6,"column_end":23},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":63684,"byte_end":63701,"line_start":90,"line_end":90,"column_start":32,"column_end":49},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1093},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":64941,"byte_end":64958,"line_start":129,"line_end":129,"column_start":42,"column_end":59},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1093},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/ft.rs","byte_start":65202,"byte_end":65219,"line_start":136,"line_end":136,"column_start":23,"column_end":40},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1093},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":67908,"byte_end":67928,"line_start":34,"line_end":34,"column_start":9,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":68149,"byte_end":68169,"line_start":44,"line_end":44,"column_start":45,"column_end":65},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1108},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":68437,"byte_end":68457,"line_start":54,"line_end":54,"column_start":26,"column_end":46},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1108},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":68631,"byte_end":68651,"line_start":63,"line_end":63,"column_start":35,"column_end":55},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1108},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fc.rs","byte_start":70187,"byte_end":70188,"line_start":114,"line_end":114,"column_start":37,"column_end":38},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":468},"to":{"krate":0,"index":465}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":71066,"byte_end":71085,"line_start":31,"line_end":31,"column_start":6,"column_end":25},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":72073,"byte_end":72092,"line_start":59,"line_end":59,"column_start":32,"column_end":51},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1130},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":72419,"byte_end":72438,"line_start":73,"line_end":73,"column_start":26,"column_end":45},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1130},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":72736,"byte_end":72755,"line_start":83,"line_end":83,"column_start":42,"column_end":61},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1130},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73001,"byte_end":73020,"line_start":90,"line_end":90,"column_start":23,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1130},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":73968,"byte_end":73984,"line_start":122,"line_end":122,"column_start":6,"column_end":22},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":74222,"byte_end":74238,"line_start":130,"line_end":130,"column_start":32,"column_end":48},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1144},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":74564,"byte_end":74580,"line_start":144,"line_end":144,"column_start":25,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1144},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":74870,"byte_end":74886,"line_start":154,"line_end":154,"column_start":42,"column_end":58},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1144},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/path/fs.rs","byte_start":75132,"byte_end":75148,"line_start":161,"line_end":161,"column_start":23,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1144},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":76870,"byte_end":76886,"line_start":21,"line_end":21,"column_start":25,"column_end":41},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1158},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77175,"byte_end":77191,"line_start":31,"line_end":31,"column_start":42,"column_end":58},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1158},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77218,"byte_end":77234,"line_start":33,"line_end":33,"column_start":23,"column_end":39},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1158},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":77910,"byte_end":77929,"line_start":62,"line_end":62,"column_start":25,"column_end":44},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1170},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78234,"byte_end":78253,"line_start":72,"line_end":72,"column_start":42,"column_end":61},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1170},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":78280,"byte_end":78299,"line_start":74,"line_end":74,"column_start":23,"column_end":42},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1170},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79114,"byte_end":79131,"line_start":108,"line_end":108,"column_start":25,"column_end":42},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1183},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79434,"byte_end":79451,"line_start":118,"line_end":118,"column_start":42,"column_end":59},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1183},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":79478,"byte_end":79495,"line_start":120,"line_end":120,"column_start":23,"column_end":40},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1183},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80282,"byte_end":80299,"line_start":154,"line_end":154,"column_start":6,"column_end":23},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":80835,"byte_end":80852,"line_start":174,"line_end":174,"column_start":25,"column_end":42},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1196},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":81154,"byte_end":81171,"line_start":184,"line_end":184,"column_start":42,"column_end":59},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1196},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":81198,"byte_end":81215,"line_start":186,"line_end":186,"column_start":23,"column_end":40},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1196},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":81595,"byte_end":81611,"line_start":201,"line_end":201,"column_start":25,"column_end":41},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1209},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82248,"byte_end":82264,"line_start":220,"line_end":220,"column_start":42,"column_end":58},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1209},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/basics.rs","byte_start":82506,"byte_end":82522,"line_start":227,"line_end":227,"column_start":23,"column_end":39},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1209},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":83900,"byte_end":83913,"line_start":29,"line_end":29,"column_start":28,"column_end":41},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1223},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":84239,"byte_end":84252,"line_start":42,"line_end":42,"column_start":45,"column_end":58},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1223},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":84519,"byte_end":84532,"line_start":52,"line_end":52,"column_start":26,"column_end":39},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1223},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":84941,"byte_end":84954,"line_start":72,"line_end":72,"column_start":35,"column_end":48},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1245},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":85802,"byte_end":85815,"line_start":99,"line_end":99,"column_start":29,"column_end":42},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1245},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":86661,"byte_end":86674,"line_start":124,"line_end":124,"column_start":45,"column_end":58},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1245},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":86941,"byte_end":86954,"line_start":134,"line_end":134,"column_start":26,"column_end":39},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1245},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/adapters.rs","byte_start":88997,"byte_end":88998,"line_start":203,"line_end":203,"column_start":29,"column_end":30},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":618},"to":{"krate":0,"index":613}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":89585,"byte_end":89595,"line_start":23,"line_end":23,"column_start":6,"column_end":16},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":90092,"byte_end":90111,"line_start":43,"line_end":43,"column_start":6,"column_end":25},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":91317,"byte_end":91336,"line_start":89,"line_end":89,"column_start":25,"column_end":44},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1283},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92155,"byte_end":92174,"line_start":110,"line_end":110,"column_start":42,"column_end":61},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1283},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/difference.rs","byte_start":92418,"byte_end":92437,"line_start":117,"line_end":117,"column_start":23,"column_end":42},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1283},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/normalize.rs","byte_start":94642,"byte_end":94661,"line_start":27,"line_end":27,"column_start":45,"column_end":64},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1299},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/normalize.rs","byte_start":94930,"byte_end":94949,"line_start":37,"line_end":37,"column_start":28,"column_end":47},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1299},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/normalize.rs","byte_start":95368,"byte_end":95387,"line_start":52,"line_end":52,"column_start":26,"column_end":45},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1299},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96275,"byte_end":96289,"line_start":28,"line_end":28,"column_start":6,"column_end":20},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":96805,"byte_end":96819,"line_start":45,"line_end":45,"column_start":25,"column_end":39},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1321},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":97115,"byte_end":97129,"line_start":55,"line_end":55,"column_start":42,"column_end":56},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1321},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":97156,"byte_end":97170,"line_start":57,"line_end":57,"column_start":23,"column_end":37},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1321},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":97534,"byte_end":97555,"line_start":72,"line_end":72,"column_start":25,"column_end":46},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1327},"to":{"krate":15,"index":5}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98184,"byte_end":98205,"line_start":91,"line_end":91,"column_start":42,"column_end":63},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1327},"to":{"krate":15,"index":15}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/str/regex.rs","byte_start":98447,"byte_end":98468,"line_start":98,"line_end":98,"column_start":23,"column_end":44},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1327},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/utils.rs","byte_start":99655,"byte_end":99667,"line_start":22,"line_end":22,"column_start":9,"column_end":21},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/utils.rs","byte_start":99790,"byte_end":99802,"line_start":31,"line_end":31,"column_start":26,"column_end":38},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1334},"to":{"krate":2,"index":6208}},{"span":{"file_name":"/Users/rudr7942/.cargo/registry/src/github.com-1ecc6299db9ec823/predicates-1.0.5/src/utils.rs","byte_start":99967,"byte_end":99979,"line_start":40,"line_end":40,"column_start":24,"column_end":36},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1334},"to":{"krate":2,"index":6203}}]}